{"version":3,"sources":["Components/EditTray/index.js","Components/Draggable/index.js","Components/Droppable/index.js","Components/TokenDrawer/index.js","Components/MapDrawer/index.js","Components/OptionTray/index.js","App.js","serviceWorker.js","index.js"],"names":["EditBar","props","className","onClick","toggleTokens","toggleMaps","close","toggleOptions","Draggable","drag","event","dataTransfer","setData","target","src","noAllowDrop","stopPropagation","id","this","draggable","onDragStart","onDragOver","children","React","Component","Droppable","onDrop","drop","allowDrop","TokenDrawer","drawerState","state","action","for","type","onChange","getToken","tokens","map","token","index","alt","width","height","MapDrawer","getMap","maps","changeMap","OptionTray","min","max","class","onInput","scaleGrid","bind","App","useState","TokenDrawerState","setTokenDrawerState","MapDrawerState","setMapDrawerState","optionTray","setOptionTray","gridScale","setGridScale","mapList","setMapList","tokenList","setTokenList","currentMap","setCurrentMap","setCurrentTokens","setWidth","setHeight","canvasRef","useRef","canvas","setCanvas","drawGrid","scale","i","add","fabric","Line","stroke","selectable","on","options","set","left","Math","round","top","drawBackground","image","Image","fromURL","img","oImg","setBackgroundImage","renderAll","useEffect","document","body","clientWidth","clientHeight","Canvas","selection","parseInt","value","objects","getObjects","remove","imageFiles","files","filesLength","length","reader","FileReader","file","onloadend","base_image","result","readAsDataURL","onload","newMap","preventDefault","data","getData","tokenImage","x","clientX","y","clientY","tokenInfo","currentTokens","drawToken","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9475e6ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MdLayers } from 'react-icons/md';\r\nimport { FaPaintBrush } from 'react-icons/fa';\r\nimport { FaDrawPolygon} from 'react-icons/fa';\r\nimport { FiMove } from 'react-icons/fi';\r\nimport { GiSelect } from 'react-icons/gi';\r\nimport { TiContacts } from 'react-icons/ti';\r\nimport { RiTreasureMapLine } from 'react-icons/ri';\r\nimport { BiCog } from 'react-icons/bi';\r\nimport { CgMinimizeAlt } from 'react-icons/cg';\r\nimport { CgColorBucket } from 'react-icons/cg';\r\nimport './index.css';\r\n\r\nfunction EditBar(props) {\r\n  return (\r\n    <div className=\"tray\"> \r\n        {/* <div className=\"edit-icon\">\r\n            <MdLayers />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <FaPaintBrush />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <CgColorBucket />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <FaDrawPolygon />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <GiSelect />\r\n        </div>\r\n        <div className=\"edit-icon\"> \r\n            <FiMove />\r\n        </div>\r\n\r\n        <div className=\"edit-bar\">\r\n\r\n        </div> */}\r\n\r\n        <div className=\"edit-icon\">\r\n            <TiContacts onClick={props.toggleTokens} />\r\n        </div>\r\n\r\n        <div className=\"edit-icon\">\r\n            <RiTreasureMapLine  onClick={props.toggleMaps} />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <CgMinimizeAlt onClick={props.close} />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <BiCog onClick={props.toggleOptions} />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Draggable extends React.Component{\r\n    drag = (event) =>{\r\n        event.dataTransfer.setData('transfer', event.target.src);\r\n    }\r\n\r\n    noAllowDrop = (event) =>{\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.id} draggable=\"true\" onDragStart={this.drag} onDragOver={this.noAllowDrop} >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Droppable extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.id} onDrop={this.props.drop} onDragOver={this.props.allowDrop}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDroppable.propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node\r\n}","import React from \"react\";\r\nimport { BsPlusSquare } from 'react-icons/bs';\r\nimport Draggable from \"../Draggable\";\r\nimport Droppable from \"../Droppable\";\r\nimport './index.css';\r\n\r\nfunction TokenDrawer(props) {\r\n\r\n    let drawerState = 'token-drawer';\r\n    if(props.state === \"drawerDocked\"){\r\n        drawerState = 'token-drawer docked'\r\n    }\r\n    else {\r\n        drawerState = 'token-drawer';\r\n    }\r\n\r\n  return (\r\n    <div className={drawerState} > \r\n      <form action=\"/action_page.php\" className=\"token-form\">\r\n        <label for=\"token-input\" >\r\n          <div className=\"add-icon\">\r\n          <BsPlusSquare  />\r\n          </div>\r\n        </label>\r\n        <input id=\"token-input\" type=\"file\" onChange={props.getToken}/>\r\n      </form>\r\n      Add a token and drop it onto the board.\r\n      <div className=\"token-container\">\r\n        {props.tokens[0] && props.tokens.map((token, index) =>(\r\n          <Droppable id={index+\"droppable\"} >\r\n            <Draggable id={index +\"token\"}  >\r\n              <img \r\n                alt=\"...\"\r\n                draggable=\"true\" src={token.src} \r\n                width=\"100\" height=\"100\" \r\n              />\r\n            </Draggable>\r\n          </Droppable>\r\n        ))} \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TokenDrawer;","import React from \"react\";\r\nimport { BsPlusSquare } from 'react-icons/bs';\r\nimport './index.css';\r\n\r\nfunction MapDrawer(props) {\r\n\r\n  \r\n\r\n\r\n    let drawerState = 'map-drawer';\r\n    if(props.state === \"drawerOpen\"){\r\n        drawerState = 'map-drawer open'\r\n    }\r\n    else {\r\n        drawerState = 'map-drawer';\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className={drawerState} > \r\n      <form action=\"/action_page.php\" className=\"map-form\">\r\n        <label for=\"file-input\" >\r\n          <div className=\"add-icon\">\r\n            <BsPlusSquare  />\r\n          </div>\r\n        </label>\r\n        <input id=\"file-input\" type=\"file\" onChange={props.getMap}/>\r\n      </form>\r\n      Add a map. Switch maps by clicking on the thumbnails.\r\n      <div className=\"map-container\">\r\n        {props.maps[0] && props.maps.map((map, index) =>(<img src={map.src} alt=\"...\" id={index +\"map\"} width=\"100\" height=\"50\" onClick={props.changeMap} />))} \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapDrawer;","import React from \"react\";\r\nimport { BsToggleOff } from 'react-icons/bs';\r\n\r\nimport './index.css';\r\n\r\nfunction OptionTray(props)  {\r\n\r\n  return (\r\n    <div className=\"options\"> \r\n        <div>\r\n            Grid Size\r\n        </div>\r\n        <div>\r\n            <input type=\"range\" min=\"10\" max=\"100\" class=\"slider\" onInput={props.scaleGrid.bind(this)}/>\r\n        </div>\r\n        {/* <div>\r\n            Mode\r\n        </div>\r\n        <div>\r\n            <BsToggleOff />\r\n        </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionTray;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport './App.css';\r\nimport { fabric } from \"fabric\";\r\nimport EditTray from './Components/EditTray';\r\nimport TokenDrawer from './Components/TokenDrawer';\r\nimport MapDrawer from './Components/MapDrawer';\r\nimport OptionTray from './Components/OptionTray';\r\nimport Droppable from \"./Components/Droppable\";\r\n\r\nfunction App(props) {\r\n  const [TokenDrawerState, setTokenDrawerState] = useState(\"drawerClosed\");\r\n  const [MapDrawerState, setMapDrawerState] = useState(\"drawerClosed\");\r\n  const [optionTray, setOptionTray] = useState(false);\r\n  const [gridScale, setGridScale] = useState(50);\r\n  const [mapList, setMapList] = useState([]);\r\n  const [tokenList, setTokenList] = useState([]);\r\n  const [currentMap, setCurrentMap] = useState(null);\r\n  const [currentTokens, setCurrentTokens] = useState([]);\r\n  const [width, setWidth] = useState(null);\r\n  const [height, setHeight] = useState(null);\r\n  const canvasRef = useRef(null);  \r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    \r\n    setWidth(document.body.clientWidth)\r\n    setHeight(document.body.clientHeight)\r\n    // Initialize grid on canvas\r\n    let canvas = new fabric.Canvas('c', { selection: false });\r\n    setCanvas(canvas)\r\n    drawGrid(canvas, document.body.clientWidth, document.body.clientHeight);\r\n\r\n  },[]);\r\n  \r\n  function toggleOptionTray(){\r\n    setOptionTray(!optionTray);\r\n  }\r\n\r\n  function closeAll(){\r\n    setOptionTray(false);\r\n    setTokenDrawerState(\"drawerClosed\");\r\n    setMapDrawerState(\"drawerClosed\");\r\n  }\r\n\r\n  function toggleTokens(){\r\n\r\n    if(MapDrawerState === \"drawerOpen\")\r\n      toggleMaps();\r\n\r\n    if(TokenDrawerState === \"drawerClosed\")\r\n      setTokenDrawerState(\"drawerDocked\")\r\n    else \r\n      setTokenDrawerState(\"drawerClosed\")\r\n  }\r\n\r\n  function toggleMaps(){\r\n\r\n    if(TokenDrawerState === \"drawerDocked\")\r\n      toggleTokens();\r\n\r\n    if(MapDrawerState === \"drawerClosed\")\r\n      setMapDrawerState(\"drawerOpen\")\r\n    else \r\n      setMapDrawerState(\"drawerClosed\")\r\n\r\n  }\r\n\r\n  function scaleGrid(event){\r\n\r\n    let scale = parseInt(event.target.value);\r\n\r\n    var objects = canvas.getObjects('line');\r\n    for (let i in objects) {\r\n        canvas.remove(objects[i]);\r\n    }\r\n\r\n    drawBackground(currentMap, width, height);\r\n    drawGrid(canvas, width, height, scale);\r\n    canvas.renderAll()\r\n    setGridScale(scale);\r\n  }\r\n\r\n  function drawGrid(canvas, width, height, scale = gridScale){\r\n    \r\n    for (var i = 0; i < (width / scale); i++) {\r\n\r\n      canvas.add(new fabric.Line([ i * scale, 0, i * scale, height], { stroke: '616161', selectable: false }));\r\n      canvas.add(new fabric.Line([ 0, i * scale, width, i * scale], { stroke: '616161', selectable: false }));\r\n    }\r\n\r\n    canvas.on('object:moving', function(options) { \r\n      options.target.set({\r\n        left: Math.round(options.target.left / scale) * scale,\r\n        top: Math.round(options.target.top / scale) * scale\r\n      });\r\n    });\r\n    \r\n  }\r\n\r\n  function drawBackground(image){\r\n\r\n    if(image){\r\n      let left = (width / 2) - (image.width / 2);\r\n      let top = (height / 2) - (image.height / 2);\r\n      fabric.Image.fromURL(image.src, function(img) {\r\n        let oImg = img.set({ left: left, top: top, selectable: false}).scale(1);\r\n        canvas.setBackgroundImage(oImg);\r\n        canvas.renderAll();\r\n      });\r\n    }\r\n  }\r\n\r\n  function drawToken(tokenImage, x, y){\r\n    \r\n    fabric.Image.fromURL(tokenImage.src, function(img) {\r\n      let oImg = img.set({ left: x, top: y, });\r\n      canvas.add(oImg)\r\n      canvas.renderAll();\r\n    });\r\n\r\n  }\r\n\r\n  function changeMap(event){\r\n    let newMap = mapList[event.target.id[0]]\r\n    setCurrentMap(newMap);\r\n    drawBackground(newMap, width, height)\r\n  }\r\n  \r\n  function uploadBackground(event){\r\n\r\n    const imageFiles = event.target.files;\r\n    const filesLength = imageFiles.length; \r\n    for(var i = 0; i < filesLength; i++) {\r\n        let reader = new FileReader();\r\n        let file = imageFiles[i];\r\n\r\n\r\n        reader.onloadend = () => {\r\n          \r\n          let base_image = new Image();\r\n          base_image.src = reader.result;\r\n\r\n          if(!currentMap){\r\n\r\n            setCurrentMap(base_image);\r\n            base_image.onload = function() {\r\n                drawBackground(base_image);\r\n              };\r\n          }\r\n          setMapList(mapList => [...mapList, base_image]);\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  function uploadToken(event){\r\n\r\n    const imageFiles = event.target.files;\r\n    const filesLength = imageFiles.length; \r\n\r\n    for(var i = 0; i < filesLength; i++) {\r\n        let reader = new FileReader();\r\n        let file = imageFiles[i];\r\n\r\n        reader.onloadend = () => {\r\n          \r\n          let base_image = new Image();\r\n          base_image.src = reader.result;          \r\n          setTokenList(mapList => [...mapList, base_image]);\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  function drop(event){\r\n    event.preventDefault();\r\n    const data = event.dataTransfer.getData('transfer');\r\n\r\n    let tokenImage = new Image();\r\n    tokenImage.src = data;\r\n\r\n    let x = event.clientX;\r\n    let y = event.clientY;\r\n    let tokenInfo = {\r\n      src: tokenImage,\r\n      x: x,\r\n      y: y,\r\n    }\r\n\r\n    setCurrentTokens(currentTokens => [...currentTokens, tokenInfo]);\r\n    drawToken(tokenImage, x, y);\r\n  }\r\n\r\n  function allowDrop(event){\r\n      event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <EditTray toggleTokens={toggleTokens} toggleMaps={toggleMaps} toggleOptions={toggleOptionTray} close={closeAll} />\r\n      {optionTray && <OptionTray scaleGrid={scaleGrid} />}\r\n      <TokenDrawer state={TokenDrawerState} getToken={uploadToken} tokens={tokenList} />\r\n      <MapDrawer state={MapDrawerState} getMap={uploadBackground} maps={mapList} changeMap={changeMap} />\r\n        { <Droppable drop={drop} allowDrop={allowDrop}>\r\n        <canvas id=\"c\" width={document.body.clientWidth} ref={canvasRef} height={document.body.clientHeight} />\r\n        </Droppable> }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}