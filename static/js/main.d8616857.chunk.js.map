{"version":3,"sources":["Data/tokens/dax.jpg","Data/tokens/pop.jpg","config.js","Components/EditTray/index.js","Components/Draggable/index.js","Components/Droppable/index.js","Components/TokenDrawer/index.js","constants.js","Components/MapDrawer/index.js","Components/ToggleMode/index.js","Components/OptionTray/index.js","Components/Login/index.js","Components/Signup/index.js","Components/Canvas/index.js","Components/TokenInfo/index.js","libs/s3Bucket.js","libs/s3Get.js","libs/postFiles.js","libs/getFiles.js","libs/updateFile.js","libs/deleteFiles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","EditBar","props","className","mode","onClick","toggleTokens","toggleMaps","close","toggleOptions","Draggable","drag","event","dataTransfer","setData","target","src","noAllowDrop","stopPropagation","id","this","draggable","onDragStart","onDragOver","children","React","Component","Droppable","onDrop","drop","allowDrop","TokenDrawer","useState","selected","setSelected","visibleList","setVisibleList","showOptions","parseInt","hideOptions","useEffect","tokens","drawerState","state","type","placeholder","onChange","value","size","length","newList","i","name","toLowerCase","includes","push","console","log","action","for","getToken","map","token","index","alt","img","onDoubleClick","deleteToken","key","tokenInformation","DELETE_ICON","MapDrawer","setClassName","setFocus","changeMap","getMap","maps","Constants","deleteMap","ToggleMode","class","toggleMode","checked","check","OptionTray","handle","min","max","onInput","scaleGrid","bind","scaleMap","handleLogout","undefined","email","setEmail","password","setPassword","setMode","rel","href","onSubmit","e","handleSubmit","preventDefault","autoFocus","disabled","validateForm","tabIndex","signUp","runTest","Signup","newUser","setNewUser","setIsLoading","userName","setUserName","pass","setPass","passConfirm","setPassConfirm","code","setCode","a","alert","Auth","username","message","handleConfirmationSubmit","confirmSignUp","signIn","userHasAuthenticated","Canvas","canvas","setCanvas","oldMap","setOldMap","oldMapScale","setOldMapScale","oldGridScale","setOldGridScale","drawGrid","scale","xOffset","yOffset","width","document","body","clientWidth","height","clientHeight","objects","getObjects","remove","widthScale","Math","floor","heightScale","start","add","fabric","Line","stroke","selectable","drawBackground","image","mapScale","left","top","Image","fromURL","background","set","setBackgroundImage","renderAll","setSnap","offsetX","offsetY","off","on","round","setCoords","getActiveObject","evt","altKey","isDragging","selection","lastPosX","clientX","lastPosY","clientY","button","x","y","gridScale","vpt","viewportTransform","requestRenderAll","setViewportTransform","getElementById","style","display","delta","deltaY","zoom","getZoom","zoomToPoint","renderIcon","deleteImg","createElement","ctx","styleOverride","fabricObject","cornerSize","save","translate","rotate","util","degreesToRadians","angle","drawImage","restore","deleteObject","eventData","backgroundColor","currentMap","newCanvas","fireRightClick","Object","prototype","controls","deleteControl","Control","cursorStyle","mouseUpHandler","render","onLoad","window","addEventListener","data","getData","tokenImage","scaleToWidth","scaleToHeight","drawToken","getHeight","getWidth","TokenInfo","setDisplay","setName","info","updateTokenInfo","file","tag","filename","Date","now","Storage","vault","put","contentType","stored","s3Upload","get","s3Get","postFiles","boardState","API","post","getFiles","updateFile","deleteFiles","db","s3","App","gameList","setGameList","gameId","mapKeys","tokenKeys","gameState","localStorage","getItem","TokenDrawerState","setTokenDrawerState","MapDrawerState","setMapDrawerState","optionTray","setOptionTray","mapList","setMapList","tokenList","setTokenList","setCurrentMap","setMapScale","setGridScale","selectedToken","setSelectedToken","signingUp","setSigningUp","isAuthenticated","isTest","setIsTest","content","games","gameid","newMap","newToken","Array","indexOf","splice","newState","authenticateLogin","currentSession","signOut","closeAll","toggleModeHandler","setItem","toggleTokenTray","reader","FileReader","imageFiles","files","checkMapSize","fileKey","list","date","getTime","onload","result","readAsDataURL","checkTokenSize","checkForUser","loadDB","img2","array","testToken1","testToken2","newToken2","prepareTest","newInfo","Login","Boolean","location","hostname","match","Amplify","configure","mandatorySignIn","region","config","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d8616857.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dax.3ae1a4a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pop.1b43a648.jpg\";","export default {\r\n    s3: {\r\n      REGION: \"us-west-2\",\r\n      BUCKET: \"gameboard-uploads\"\r\n    },\r\n    apiGateway: {\r\n      REGION: \"us-west-2\",\r\n      URL: \"https://k6r2pgn41j.execute-api.us-west-2.amazonaws.com/prod\"\r\n    },\r\n    cognito: {\r\n      REGION: \"us-west-2\",\r\n      USER_POOL_ID: \"us-west-2_55lKkN867\",\r\n      APP_CLIENT_ID: \"1jtkpri800074n0e9amfsekbja\",\r\n      IDENTITY_POOL_ID: \"us-west-2:d02cca9d-cd85-4f92-87bb-4e0ca6b75fdc\"\r\n    }\r\n  };","import React from 'react';\r\nimport { TiContacts } from 'react-icons/ti';\r\nimport { RiTreasureMapLine } from 'react-icons/ri';\r\nimport { BiCog } from 'react-icons/bi';\r\nimport { CgMinimizeAlt } from 'react-icons/cg';\r\nimport './index.css';\r\nimport './styles/mode.css';\r\n\r\nfunction EditBar(props) {\r\n    return (\r\n        <div className={props.mode}>\r\n            <div className=\"tray\">\r\n                <div className=\"edit-icon\">\r\n                    <TiContacts onClick={props.toggleTokens} />\r\n                </div>\r\n\r\n                <div className=\"edit-icon\">\r\n                    <RiTreasureMapLine onClick={props.toggleMaps} />\r\n                </div>\r\n                <div className=\"edit-icon\">\r\n                    <CgMinimizeAlt onClick={props.close} />\r\n                </div>\r\n                <div className=\"edit-icon\">\r\n                    <BiCog onClick={props.toggleOptions} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Draggable extends React.Component{\r\n    drag = (event) =>{\r\n        event.dataTransfer.setData('transfer', event.target.src);\r\n    }\r\n\r\n    noAllowDrop = (event) =>{\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.id} draggable=\"true\" onDragStart={this.drag} onDragOver={this.noAllowDrop} >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Droppable extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.id} onDrop={this.props.drop} onDragOver={this.props.allowDrop}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDroppable.propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { RiAddLine } from 'react-icons/ri';\r\nimport { RiContactsLine } from 'react-icons/ri';\r\nimport { RiDeleteBin7Line } from 'react-icons/ri';\r\nimport Draggable from \"../Draggable\";\r\nimport Droppable from \"../Droppable\";\r\nimport './styles/index.css';\r\nimport './styles/mode.css';\r\n\r\nfunction TokenDrawer(props) {\r\n  const [selected, setSelected] = useState(null);\r\n  const [className, setClassName] = useState(\"show-options\");\r\n  const [visibleList, setVisibleList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setVisibleList(props.tokens);\r\n  },[props.tokens]);\r\n\r\n  function showOptions(event) {\r\n    setSelected(parseInt(event.target.id[0]));\r\n  }\r\n\r\n  function hideOptions(event) {\r\n    setSelected(null);\r\n  }\r\n\r\n  let drawerState = 'token-drawer';\r\n  if (props.state === \"drawerDocked\") {\r\n    drawerState = 'token-drawer docked'\r\n  }\r\n  else {\r\n    drawerState = 'token-drawer';\r\n  }\r\n\r\n  function handleSearch(event){\r\n    if(event.target.value === \"\"){\r\n      setVisibleList(props.tokens);\r\n      return;\r\n    }\r\n\r\n    let size = visibleList.length;\r\n    let newList = [];\r\n\r\n    for(let i = 0;i < size;++i){\r\n      if(visibleList[i].name.toLowerCase().includes(event.target.value.toLowerCase()))\r\n        newList.push(visibleList[i])\r\n    }\r\n\r\n    setVisibleList(newList);\r\n    console.log(newList)\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode}>\r\n      <div className={drawerState}>\r\n        <div className=\"searchbar\">\r\n          <input type=\"text\" placeholder=\"Search..\" onChange={handleSearch}></input>\r\n        </div>\r\n        <div className=\"token-container\">\r\n          <div className=\"upload-form-token\">\r\n            <form action=\"/action_page.php\" className=\"token-form\">\r\n              <label for=\"token-input\" >\r\n                <div className=\"add-icon-token\">\r\n                  <RiAddLine />\r\n                </div>\r\n              </label>\r\n              <input id=\"token-input\" type=\"file\" onChange={props.getToken} />\r\n            </form>\r\n          </div>\r\n          {visibleList[0] ? visibleList.map((token, index) => (\r\n            <div className=\"token-img\">\r\n              <Droppable id={index + \"droppable\"} >\r\n                <Draggable id={index + \"token\"} >\r\n                  <div className=\"token-thumbnails\">\r\n                    {(selected === index) ?\r\n                      <img\r\n                        className={className + \" \" + \"token\"}\r\n                        alt=\"...\"\r\n                        id={index + \"token\"}\r\n                        draggable=\"true\" src={token.img.src}\r\n                        onDoubleClick={showOptions}\r\n                        onClick={hideOptions}\r\n                      />\r\n                      :\r\n                      <img\r\n                        className=\"token\"\r\n                        alt=\"...\"\r\n                        id={index + \"token\"}\r\n                        draggable=\"true\" src={token.img.src}\r\n                        onDoubleClick={showOptions}\r\n                        onClick={hideOptions}\r\n                      />\r\n                    }\r\n                    <div className=\"token-options\">\r\n                      <div className=\"delete-token option-btn\" onClick={() => props.deleteToken(token.key)}>\r\n                        <RiDeleteBin7Line />\r\n                      </div>\r\n                      <div className=\"info-token option-btn\" onClick={() => props.tokenInformation(token.key)}>\r\n                        <RiContactsLine />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Draggable>\r\n              </Droppable>\r\n            </div>\r\n          ))\r\n            :\r\n            <p>Add a token. Drag and drop the token onto the grid. Scale token to grid by double clicking the token.</p>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TokenDrawer;","export const MAX_MAP_SIZE = 200000;\r\nexport const MAX_TOKEN_SIZE = 160000;\r\nexport let DELETE_ICON = \"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg version='1.1' id='Ebene_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='595.275px' height='595.275px' viewBox='200 215 230 470' xml:space='preserve'%3E%3Ccircle style='fill:%23F44336;' cx='299.76' cy='439.067' r='218.516'/%3E%3Cg%3E%3Crect x='267.162' y='307.978' transform='matrix(0.7071 -0.7071 0.7071 0.7071 -222.6202 340.6915)' style='fill:white;' width='65.545' height='262.18'/%3E%3Crect x='266.988' y='308.153' transform='matrix(0.7071 0.7071 -0.7071 0.7071 398.3889 -83.3116)' style='fill:white;' width='65.544' height='262.179'/%3E%3C/g%3E%3C/svg%3E\";","import React, { useState } from \"react\";\r\nimport { RiAddLine } from 'react-icons/ri';\r\nimport './index.css';\r\nimport './styles/mode.css';\r\nimport * as Constants from '../../constants';\r\n\r\nfunction MapDrawer(props) {\r\n  const [selected, setSelected] = useState(null);\r\n  const [className, setClassName] = useState(\"selected\");\r\n\r\n  function setFocus(event) {\r\n    setSelected(parseInt(event.target.id[0]));\r\n    props.changeMap(event);\r\n\r\n    if (className === \"selected show-options\")\r\n      setClassName(\"selected\");\r\n  }\r\n\r\n  function showOptions(event) {\r\n    setSelected(parseInt(event.target.id[0]));\r\n\r\n    if (className === \"selected show-options\")\r\n      setClassName(\"selected\");\r\n    else\r\n      setClassName(\"selected show-options\");\r\n  }\r\n\r\n  let drawerState = 'map-drawer';\r\n  if (props.state === \"drawerOpen\") {\r\n    drawerState = 'map-drawer open'\r\n  }\r\n  else {\r\n    drawerState = 'map-drawer';\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode}>\r\n      <div className={drawerState} >\r\n        <div className=\"map-container\">\r\n          <div className=\"upload-form\">\r\n            <form action=\"/action_page.php\" className=\"map-form\">\r\n              <label for=\"map-file-input\" >\r\n                <div className=\"add-icon\">\r\n                  <RiAddLine />\r\n                </div>\r\n              </label>\r\n              <input id=\"map-file-input\" type=\"file\" onChange={props.getMap} />\r\n            </form>\r\n          </div>\r\n          {props.maps[0] ?\r\n            props.maps.map((map, index) => (\r\n              <div className=\"map-thumbnails\">\r\n                {(selected === index) ?\r\n                  <img\r\n                    className={className + \" \" + \"map\"}\r\n                    src={map.img.src}\r\n                    alt=\"...\"\r\n                    id={index + \"m\"}\r\n                    onClick={setFocus}\r\n                    onDoubleClick={showOptions}\r\n                  />\r\n                  :\r\n                  <img\r\n                    className={\"map\"}\r\n                    src={map.img.src}\r\n                    alt=\"...\"\r\n                    id={index + \"map\"}\r\n                    onClick={setFocus}\r\n                    onDoubleClick={showOptions}\r\n                  />\r\n                }\r\n                <img className=\"delete-map\" src={Constants.DELETE_ICON} onClick={() => props.deleteMap(map.key)} />\r\n              </div>\r\n            ))\r\n            :\r\n            <p>Add a map. Switch maps by clicking on the thumbnails.</p>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapDrawer;","import React from 'react';\r\nimport './index.css';\r\n\r\nfunction ToggleMode(props) {\r\n    return (\r\n        <div className={props.mode}>\r\n            <div id=\"mode-container\">\r\n                <label>Dark Mode</label>\r\n                <div>\r\n                    <label class=\"switch\">\r\n                        <input onClick={props.toggleMode} type=\"checkbox\" checked={props.check}/>\r\n                        <span class=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToggleMode;","import React, { useState, useEffect, } from \"react\";\r\nimport Draggable from 'react-draggable';\r\nimport ToggleMode from '../ToggleMode';\r\nimport { MdDragHandle } from 'react-icons/md';\r\n\r\nimport './index.css';\r\nimport './styles/mode.css'\r\n\r\nfunction OptionTray(props) {\r\n\r\n    return (\r\n        <div className={props.mode}>\r\n            <Draggable handle=\".handle\">\r\n                <div className=\"options\">\r\n                    <div>\r\n                        <MdDragHandle className=\"drag-icon handle\" />\r\n                    </div>\r\n                    <div>\r\n                        Grid Size\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"range\" min=\"10\" max=\"100\" class=\"slider\" onInput={props.scaleGrid.bind(this)} />\r\n                    </div>\r\n                    <div>\r\n                        Map Size\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"range\" min=\"10\" max=\"100\" class=\"slider\" onInput={props.scaleMap.bind(this)} />\r\n                    </div>\r\n                    <div>\r\n                        <ToggleMode check={props.mode === \"dark-mode\" ? true : false} toggleMode={props.toggleMode} mode={props.mode} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"logout-button\" onClick={props.handleLogout.bind(this)}><span>Log Out</span></div>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default OptionTray;","import React, { useState, useEffect } from \"react\";\r\nimport ToggleMode from '../ToggleMode';\r\nimport './styles/darkmode.css';\r\nimport './styles/index.css';\r\nimport './styles/lightmode.css';\r\n\r\nfunction OptionTray(props) {\r\n  const [email, setEmail] = useState(undefined);\r\n  const [password, setPassword] = useState(undefined);\r\n  const [mode, setMode] = useState();\r\n\r\n  useEffect(() => {\r\n    setMode(props.mode)\r\n  }, [props.mode]);\r\n\r\n  function validateForm() {\r\n    if (email && password)\r\n      return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  return (\r\n    <div className={mode}>\r\n      <div className=\"login-page\">\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"./styles/lightmode.css\" />\r\n        <div className={\"ribbon ribbon-\" + mode}>\r\n          <div className={\"title title-\" + mode}>\r\n            <h1 className={\"h1-\" + mode}>Battlemaps</h1>\r\n            <p>Virtual Tabletop Toolset</p>\r\n          </div>\r\n          <div className=\"login-form\">\r\n            <form\r\n              onSubmit={(e) => {\r\n                props.handleSubmit(email, password);\r\n                e.preventDefault();\r\n              }}>\r\n              <input\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Email\"\r\n                onChange={e => setEmail(e.target.value)}\r\n              />\r\n              <input\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={e => setPassword(e.target.value)}\r\n                type=\"password\"\r\n              />\r\n              <div>\r\n                <button className=\"login-button lightMode\" disabled={!validateForm()} type=\"submit\" tabIndex=\"3\">\r\n                  <span>\r\n                    Login\r\n              </span>\r\n                </button>\r\n              </div>\r\n\r\n            </form>\r\n            <div className=\"links\">\r\n              <span>Dont have an account?</span>\r\n              <a onClick={props.signUp} tabIndex=\"1\"><span> Sign up here</span></a>\r\n              <span>or</span>\r\n              <a onClick={props.runTest} tabIndex=\"2\"><span>Try without signing up</span></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"login-toggle\" className={props.mode}>\r\n        <ToggleMode check={props.mode === \"dark-mode\" ? true : false} toggleMode={props.toggleMode} mode={props.mode} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionTray;","import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport \"./index.css\";\r\nimport \"./styles/lightmode.css\";\r\nimport \"./styles/darkmode.css\";\r\n\r\nexport default function Signup(props) {\r\n\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false); // Need to find a loading animation or make one\r\n  const [userName, setUserName] = useState(null);\r\n  const [pass, setPass] = useState(null);\r\n  const [passConfirm, setPassConfirm] = useState(null);\r\n  const [code, setCode] = useState(null);\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (pass !== passConfirm) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const newUser = await Auth.signUp({\r\n        username: userName,\r\n        password: pass,\r\n      });\r\n\r\n      setIsLoading(false);\r\n      setNewUser(newUser);\r\n    } catch (e) {\r\n      alert(e.message)\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handleConfirmationSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await Auth.confirmSignUp(userName, code);\r\n      await Auth.signIn(userName, pass);\r\n      props.confirmSignUp();\r\n      props.userHasAuthenticated(true);\r\n    } catch (e) {\r\n      alert(e.message);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <div className=\"signup-page\">\r\n        <div className=\"ribbon confirmation\">\r\n          <form onSubmit={handleConfirmationSubmit}>\r\n            <label>Confirmation Code </label>\r\n            <input\r\n              autoFocus\r\n              type=\"tel\"\r\n              onChange={(event) => setCode(event.target.value)}\r\n            />\r\n            <button>Submit</button>\r\n            <h1>Please check your email for the code.</h1>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderForm() {\r\n    return (\r\n      <div className=\"signup-page\">\r\n        <div className=\"ribbon\">\r\n          <div className=\"signup-card\">\r\n            <form onSubmit={handleSubmit} className=\"signup-form\">\r\n              <label>Email</label>\r\n              <input\r\n                autoFocus\r\n                type=\"email\"\r\n                onChange={(event) => setUserName(event.target.value)}\r\n              />\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={(event) => setPass(event.target.value)}\r\n              />\r\n              <label>Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={(event) => setPassConfirm(event.target.value)}\r\n              />\r\n              <div>\r\n                <button type=\"button\" onClick={props.confirmSignUp}>Back</button>\r\n                <span> </span>\r\n                <button type=\"submit\">Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode}>\r\n      {newUser === null ? renderForm() : renderConfirmationForm()}\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Droppable from \"../Droppable\";\r\nimport { fabric } from \"fabric\";\r\nimport { MdFilterCenterFocus } from 'react-icons/md';\r\nimport './index.css';\r\nimport * as Constants from \"../../constants\";\r\n\r\n\r\nfunction Canvas(props) {\r\n    const [canvas, setCanvas] = useState(null);\r\n    const [oldMap, setOldMap] = useState(null);\r\n    const [oldMapScale, setOldMapScale] = useState(null);\r\n    const [oldGridScale, setOldGridScale] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        onLoad();\r\n\r\n        window.addEventListener('contextmenu', function (e) {\r\n            // do something here... \r\n            e.preventDefault();\r\n        }, false);\r\n\r\n    }, [props.currentMap, props.gridScale, props.mapScale, props.mode]);\r\n\r\n    // Canvas initialization\r\n    function onLoad() {\r\n\r\n\r\n        if (!canvas) {\r\n            let newCanvas = new fabric.Canvas('canvas', {\r\n                selection: false,\r\n                // height: height,\r\n                // width: width,\r\n                fireRightClick: true,\r\n                //fireMiddleClick: true, \r\n            });\r\n\r\n            if (props.mode === \"dark-mode\")\r\n                newCanvas.backgroundColor = \"#525959\";\r\n\r\n            setCanvas(newCanvas);\r\n            setSnap(newCanvas, props.gridScale)\r\n            drawGrid(newCanvas, props.gridScale);\r\n            drawBackground(props.currentMap);\r\n            setDelete();\r\n\r\n            setOldGridScale(props.gridScale);\r\n            setOldMapScale(props.mapScale);\r\n            setOldMap(props.currentMap);\r\n        } else {\r\n            if (props.mode === \"dark-mode\") {\r\n                canvas.backgroundColor = \"#525959\";\r\n                canvas.renderAll()\r\n            }\r\n            else {\r\n                canvas.backgroundColor = \"white\";\r\n                canvas.renderAll()\r\n            }\r\n\r\n            if (props.gridScale !== oldGridScale) {\r\n                setSnap(canvas, props.gridScale)\r\n                drawGrid(canvas, props.gridScale);\r\n                setOldGridScale(props.gridScale);\r\n            }\r\n            if (props.currentMap !== oldMap | props.mapScale !== oldMapScale) {\r\n                drawBackground(props.currentMap);\r\n                setOldMap(props.currentMap);\r\n                setOldMapScale(props.mapScale)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Renders token to canvas at set coordinates\r\n    function drawToken(tokenImage, x, y) {\r\n\r\n        fabric.Image.fromURL(tokenImage.src, function (img) {\r\n            let background = img.set({ left: x, top: y });\r\n            background.scaleToWidth(props.gridScale);\r\n            background.scaleToHeight(props.gridScale);\r\n            canvas.add(background)\r\n        });\r\n\r\n    }\r\n\r\n    // Renders grid lines to canvas\r\n    function drawGrid(canvas, scale, xOffset = 0, yOffset = 0) {\r\n        let width = document.body.clientWidth;\r\n        let height = document.body.clientHeight;\r\n\r\n        let objects = canvas.getObjects('line');\r\n        for (let i in objects) {\r\n            canvas.remove(objects[i]);\r\n        }\r\n\r\n        let widthScale = Math.floor(height / scale) + 3;\r\n        let heightScale = Math.floor(width / scale) + 3;\r\n        let start = -1*scale;\r\n\r\n        for (let i = 0; i <  widthScale; i++) {\r\n            canvas.add(new fabric.Line([\r\n                (start + xOffset), \r\n                (i * scale) + start + yOffset, \r\n                (width - start)  + xOffset, \r\n                (i * scale) + start + yOffset], \r\n                { stroke: \"grey\", selectable: false }));\r\n        }\r\n        for (let i = 0; i < heightScale; i++) {\r\n            canvas.add(new fabric.Line([\r\n                (i * scale) + start + xOffset, \r\n                (start + yOffset), \r\n                (i * scale) + start + xOffset, \r\n                (height - start) + yOffset], \r\n                { stroke: \"grey\", selectable: false }));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Renders background to canvas\r\n    function drawBackground(image) {\r\n        if (!image)\r\n            return;\r\n\r\n        let scale = props.mapScale;\r\n        let width = document.body.clientWidth;\r\n        let height = document.body.clientHeight;\r\n\r\n        if (image) {\r\n            let left = (width / 2) - ((image.width / 2) * scale);\r\n            let top = (height / 2) - ((image.height / 2) * scale);\r\n\r\n            fabric.Image.fromURL(image.src, function (img) {\r\n                let background = img.set({ left: left, top: top, selectable: false }).scale(scale);\r\n                canvas.setBackgroundImage(background);\r\n                canvas.renderAll();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // Sets the grid snap points for tokens\r\n    function setSnap(canvas, scale, offsetX = 0, offsetY = 0) {\r\n\r\n        // Clears canvas events so events don't stack on rerender\r\n        canvas.off()\r\n        canvas.on('object:moving', function (event) {\r\n\r\n            if(offsetX === 0 && offsetY === 0){\r\n                event.target.left = (Math.round(event.target.left / scale) * scale);\r\n                event.target.top = (Math.round(event.target.top / scale ) * scale);\r\n            }else{\r\n                event.target.left = (Math.round(event.target.left / scale) * scale) +  (offsetX % scale);\r\n                event.target.top = (Math.round(event.target.top / scale ) * scale)  +  (offsetY % scale);\r\n            }\r\n\r\n            event.target.setCoords();\r\n        })\r\n\r\n        canvas.on('mouse:down', function (event) {\r\n            const active = canvas.getActiveObject()\r\n            if (active)\r\n                return;\r\n\r\n            let evt = event.e;\r\n            if (evt.altKey === true) {\r\n                this.isDragging = true;\r\n                this.selection = false;\r\n                this.lastPosX = evt.clientX;\r\n                this.lastPosY = evt.clientY;\r\n            }\r\n\r\n            if (event.button !== 3)\r\n                return;\r\n\r\n            let e = event.e;\r\n            this.isDragging = true;\r\n            this.selection = false;\r\n            this.lastPosX = e.clientX;\r\n            this.lastPosY = e.clientY;\r\n        });\r\n\r\n        canvas.on('mouse:move', function (event) {\r\n            if (this.isDragging) {\r\n\r\n                let e = event.e;\r\n                if (e.altKey === true) {\r\n                    let x = e.clientX - this.lastPosX;\r\n                    let y = e.clientY - this.lastPosY;\r\n\r\n                    if(x >= 20){\r\n                        x = 20;\r\n                    }\r\n                    if(x <= -20){\r\n                        x = -20;\r\n                    }\r\n\r\n                    if(y >= 20){\r\n                        y = 20;\r\n                    }\r\n                    if(y <= -20){\r\n                        y = -20;\r\n                    }\r\n\r\n                    console.log(x + \" \" + y)\r\n                    setSnap(this,props.gridScale, x, y);\r\n                    drawGrid(this, props.gridScale,x,y);\r\n                    return;\r\n                }\r\n\r\n                let vpt = this.viewportTransform;\r\n                vpt[4] += e.clientX - this.lastPosX;\r\n                vpt[5] += e.clientY - this.lastPosY;\r\n                this.requestRenderAll();\r\n                this.lastPosX = e.clientX;\r\n                this.lastPosY = e.clientY;\r\n            }\r\n        });\r\n        canvas.on('mouse:up', function (event) {\r\n            if (this.isDragging) {\r\n\r\n                this.setViewportTransform(this.viewportTransform);\r\n                this.isDragging = false;\r\n                this.selection = true;\r\n                document.getElementById(\"center\").style.display = \"block\";\r\n            }\r\n        });\r\n\r\n        // zooms in and out of canvas\r\n        canvas.on('mouse:wheel', function (event) {\r\n            let delta = event.e.deltaY;\r\n            let zoom = canvas.getZoom();\r\n            zoom *= 0.999 ** delta;\r\n            if (zoom > 20) zoom = 20;\r\n            if (zoom < 0.5) zoom = 0.5;\r\n            canvas.zoomToPoint({ x: event.e.offsetX, y: event.e.offsetY }, zoom);\r\n            event.e.preventDefault();\r\n            event.e.stopPropagation();\r\n            document.getElementById(\"center\").style.display = \"block\";\r\n        });\r\n    }\r\n\r\n    function recenterCanvas() {\r\n\r\n        let zoom = canvas.getZoom();\r\n        let width = document.body.clientWidth;\r\n        let height = document.body.clientHeight;\r\n        let x = (height / 2) - ((canvas.getHeight() / 2) * zoom);\r\n        let y = (width / 2) - ((canvas.getWidth() / 2) * zoom);\r\n        canvas.viewportTransform[4] = y;\r\n        canvas.viewportTransform[5] = x;\r\n        canvas.requestRenderAll();\r\n        canvas.lastPosX = x;\r\n        canvas.lastPosY = y;\r\n        document.getElementById(\"center\").style.display = \"none\";\r\n    }\r\n\r\n    // Renders the delete icon from svg source.\r\n    function renderIcon() {\r\n        let deleteIcon = Constants.DELETE_ICON;\r\n\r\n        let deleteImg = document.createElement('img');\r\n        deleteImg.src = deleteIcon;\r\n\r\n\r\n        return function renderIcon(ctx, left, top, styleOverride, fabricObject) {\r\n            let size = this.cornerSize;\r\n            ctx.save();\r\n            ctx.translate(left, top);\r\n            ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle));\r\n            ctx.drawImage(deleteImg, -size / 2, -size / 2, size, size);\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    // Places the delete icon to the corner of each token.\r\n    function setDelete() {\r\n        fabric.Object.prototype.controls.deleteControl = new fabric.Control({\r\n            x: 0.5,\r\n            y: -0.5,\r\n            offsetY: -16,\r\n            offsetX: 16,\r\n            cursorStyle: 'pointer',\r\n            mouseUpHandler: deleteObject,\r\n            render: renderIcon(),\r\n            cornerSize: 24\r\n        });\r\n    }\r\n\r\n    // Onclick handler for delete icon. Removes selected object.\r\n    function deleteObject(eventData, target) {\r\n        let canvas = target.canvas;\r\n        canvas.remove(target);\r\n        canvas.requestRenderAll();\r\n    }\r\n\r\n\r\n    // Droppable functions\r\n\r\n    function drop(event) {\r\n        event.preventDefault();\r\n        const data = event.dataTransfer.getData('transfer');\r\n\r\n        let tokenImage = new Image();\r\n        tokenImage.src = data;\r\n\r\n        let x = event.clientX;\r\n        let y = event.clientY;\r\n        let tokenInfo = {\r\n            src: tokenImage,\r\n            x: x,\r\n            y: y,\r\n        }\r\n        drawToken(tokenImage, x, y);\r\n    }\r\n\r\n    function allowDrop(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Droppable drop={drop} allowDrop={allowDrop}>\r\n            <div id=\"center\" onClick={recenterCanvas}><MdFilterCenterFocus /></div>\r\n            <canvas id=\"canvas\" width={document.body.clientWidth} height={document.body.clientHeight} />\r\n        </Droppable>\r\n    );\r\n}\r\n\r\nexport default Canvas;","import React, { useState, useEffect } from \"react\";\r\nimport Draggable from 'react-draggable';\r\nimport { MdDragHandle } from 'react-icons/md';\r\nimport './styles/index.css';\r\nimport './styles/mode.css'\r\n\r\nfunction TokenInfo(props) {\r\n    const [display, setDisplay] = useState(\"none\");\r\n    const [name, setName] = useState(\"\");\r\n    useEffect(() =>{\r\n        if(props.selected){\r\n            setDisplay(\"display\");\r\n            setName(props.selected.name);\r\n        } else setDisplay(\"none\");\r\n            \r\n    },[props.selected]);\r\n\r\n    function handleChange(event){\r\n        setName(event.target.value)\r\n    }\r\n    \r\n    function handleSave(){\r\n        let info = props.selected;\r\n        info.name = name;\r\n        props.updateTokenInfo(info);\r\n    }\r\n\r\n    return (\r\n        <div className={props.mode + \" \" + display}>\r\n            <Draggable handle=\".handle\">\r\n                <div className=\"token-information\">\r\n                    <div>\r\n                        <MdDragHandle className=\"drag-icon handle\" />\r\n                    </div>\r\n                    <input type=\"text\" placeholder=\"Name\" value={name} onChange={handleChange}/>\r\n                    <button className=\"info-button\" onClick={handleSave} >Save</button>\r\n                </div>\r\n            </Draggable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TokenInfo;","import { Storage } from \"aws-amplify\";\r\n\r\nasync function s3Upload(file, type, tag) {\r\n  const filename = `${Date.now()}${tag}`;\r\n\r\n  const stored = await Storage.vault.put(filename, file, {\r\n    contentType: type,\r\n  });\r\n\r\n  return stored.key;\r\n}\r\n\r\nexport default s3Upload;","import { Storage } from \"aws-amplify\";\r\n\r\nasync function s3Get(key) {\r\n  const stored = await Storage.vault.get(key);\r\n\r\n  return stored;\r\n}\r\n\r\nexport default s3Get;","import { API } from \"aws-amplify\";\r\n\r\nexport default function postFiles(boardState) {\r\n    return API.post(\"gameboard\", \"/gameboard\", {\r\n      body: boardState\r\n    });\r\n}","import { API } from \"aws-amplify\";\r\n\r\nexport default async function getFiles(){\r\n    return API.get(\"gameboard\", `/gameboard`);\r\n}","import { API } from \"aws-amplify\";\r\n\r\nexport default function updateFile(boardState, id) {\r\n    return API.put(\"gameboard\", `/gameboard/${id}`, {\r\n      body: boardState\r\n    });\r\n}","import { Storage } from \"aws-amplify\";\r\nimport { API } from \"aws-amplify\";\r\nimport updateFile from './updateFile';\r\n\r\nexport default async function deleteFiles(id, boardState, key) {\r\n    const stored = {\r\n        db: null,\r\n        s3: null\r\n    }\r\n\r\n    stored.db = await updateFile(boardState, id);\r\n    stored.s3 = await Storage.vault.remove(key);\r\n    return stored;\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// Components\r\nimport EditTray from './Components/EditTray';\r\nimport TokenDrawer from './Components/TokenDrawer';\r\nimport MapDrawer from './Components/MapDrawer';\r\nimport OptionTray from './Components/OptionTray';\r\nimport Login from \"./Components/Login\";\r\nimport Signup from \"./Components/Signup\";\r\nimport Canvas from \"./Components/Canvas\";\r\nimport TokenInfo from \"./Components/TokenInfo\";\r\n\r\n// Backend Imports\r\nimport { Auth } from \"aws-amplify\";\r\nimport s3Upload from \"./libs/s3Bucket\";\r\nimport s3Get from './libs/s3Get';\r\nimport postFiles from './libs/postFiles';\r\nimport getFiles from './libs/getFiles';\r\nimport updateFile from './libs/updateFile';\r\nimport deleteFiles from './libs/deleteFiles';\r\n\r\n// css and constants\r\nimport './App.css';\r\nimport * as Constants from './constants';\r\nimport testToken1 from './Data/tokens/dax.jpg';\r\nimport testToken2 from './Data/tokens/pop.jpg';\r\n\r\nfunction App(props) {\r\n  // List of game states\r\n  const [gameList, setGameList] = useState(null);\r\n\r\n  // Current game state\r\n  const [gameState, SetGameState] = useState({ gameId: null, mapKeys: [], tokenKeys: [] });\r\n\r\n  // User interface variables\r\n  const [mode, setMode] = useState(defaultMode(localStorage.getItem('mode')));\r\n  const [TokenDrawerState, setTokenDrawerState] = useState(\"drawerClosed\");\r\n  const [MapDrawerState, setMapDrawerState] = useState(\"drawerClosed\");\r\n  const [optionTray, setOptionTray] = useState(false);\r\n\r\n  // Canvas state variables\r\n  const [mapList, setMapList] = useState([]);\r\n  const [tokenList, setTokenList] = useState([]);\r\n  const [currentMap, setCurrentMap] = useState(null);\r\n  const [mapScale, setMapScale] = useState(1);\r\n  const [gridScale, setGridScale] = useState(50);\r\n  const [selectedToken, setSelectedToken] = useState(false)\r\n\r\n  // User authentication variables\r\n  const [signingUp, setSigningUp] = useState(false);\r\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n  const [isTest, setIsTest] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkForUser();\r\n    loadDB();\r\n\r\n    if (isTest)\r\n      prepareTest();\r\n\r\n  }, [isAuthenticated]);\r\n\r\n  function defaultMode(stored) {\r\n    if (stored === null)\r\n      return \"light-mode\"\r\n    else return stored;\r\n  }\r\n\r\n  // This function creates an initial board state so none-users can try out the application.\r\n  function prepareTest() {\r\n\r\n    let img = new Image();\r\n    let img2 = new Image();\r\n    let array = new Array();\r\n\r\n    img.src = testToken1;\r\n    img2.src = testToken2;\r\n\r\n    let newToken = {\r\n      img: img,\r\n      key: \"testToken1\",\r\n      name: \"Dax\"\r\n    }\r\n\r\n    let newToken2 = {\r\n      img: img2,\r\n      key: \"testToken2\",\r\n      name: \"Pop\"\r\n    }\r\n\r\n    array.push(newToken);\r\n    array.push(newToken2);\r\n\r\n    setTokenList(array);\r\n  }\r\n\r\n  // State object function. Returns an object with the correct attributes to match schema for backend.\r\n  function boardState(maps, tokens) {\r\n    const state = {\r\n      content: {\r\n        maps: maps,\r\n        tokens: tokens\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n\r\n  // Backend file upload functions\r\n\r\n  // Fetches information from DB using the libs hook getFiles.\r\n  async function loadDB() {\r\n    if (!isAuthenticated || isTest)\r\n      return;\r\n    try {\r\n      // getFiles is a lib function that queries backend for content\r\n      const games = await getFiles();\r\n\r\n      if (games[0]) {\r\n        // Stores information\r\n        setGameList(games);\r\n\r\n        // parses out that information into state\r\n        gameState.gameId = games[0].gameid;\r\n        gameState.mapKeys = games[0].content.maps;\r\n        gameState.tokenKeys = games[0].content.tokens\r\n\r\n        // Fetches assets from backend and populates local data structures\r\n        for (let i = 0; i < gameState.mapKeys.length; ++i) {\r\n          let file = await s3Get(gameState.mapKeys[i]);\r\n          let img = new Image();\r\n          img.src = file;\r\n\r\n          let newMap = {\r\n            img: img,\r\n            key: gameState.mapKeys[i]\r\n          }\r\n\r\n          setMapList(mapList => [...mapList, newMap]);\r\n        }\r\n\r\n        for (let i = 0; i < gameState.tokenKeys.length; ++i) {\r\n          let file = await s3Get(gameState.tokenKeys[i]);\r\n          let img = new Image();\r\n          img.src = file;\r\n\r\n          let newToken = {\r\n            img: img,\r\n            key: gameState.tokenKeys[i]\r\n          }\r\n\r\n          setTokenList(tokenList => [...tokenList, newToken]);\r\n        }\r\n      }\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  // onClick handler for map removal\r\n  async function deleteMap(key) {\r\n\r\n    if (isTest) {\r\n      let newList = new Array();\r\n      for (let i = 0; i < mapList.length; i++) {\r\n        if (mapList[i].key !== key) {\r\n          newList.push(mapList[i]);\r\n        }\r\n      }\r\n      setMapList(newList);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let index = gameState.mapKeys.indexOf(key);\r\n      if (index > -1) {\r\n        gameState.mapKeys.splice(index, 1);\r\n\r\n        // Array needs to be copied so when setMapList is called, the app rerenders.\r\n        let newList = [...mapList];\r\n        newList.splice(index, 1);\r\n        setMapList(newList);\r\n      }\r\n\r\n      const newState = boardState(gameState.mapKeys, gameState.tokenKeys);\r\n      await deleteFiles(gameState.gameId, newState, key);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  // onClick handler for token removal\r\n  async function deleteToken(key) {\r\n\r\n    // If not logged in, delete works locally only.\r\n    if (isTest) {\r\n      let newList = new Array();\r\n      for (let i = 0; i < tokenList.length; i++) {\r\n        if (tokenList[i].key !== key) {\r\n          newList.push(tokenList[i]);\r\n        }\r\n      }\r\n      setTokenList(newList);\r\n      return;\r\n    }\r\n\r\n    // If logged in, delete needs update DB\r\n    try {\r\n      let index = gameState.tokenKeys.indexOf(key);\r\n      if (index > -1) {\r\n        gameState.tokenKeys.splice(index, 1);\r\n\r\n        // Array needs to be copied so when setMapList is called, the app rerenders.\r\n        let newList = [...tokenList];\r\n        newList.splice(index, 1);\r\n        setTokenList(newList);\r\n      }\r\n\r\n      const newState = boardState(gameState.mapKeys, gameState.tokenKeys);\r\n      await deleteFiles(gameState.gameId, newState, key);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n\r\n  // User authentication functions\r\n\r\n  // loginHandler. Auth functionality should be moved to hook eventually\r\n  async function loginHandler(email, password) {\r\n\r\n    try {\r\n      await Auth.signIn(email, password);\r\n      authenticateLogin();\r\n    } catch (e) {\r\n      alert(\"Login error:\" + e.message);\r\n    }\r\n  }\r\n\r\n  async function checkForUser() {\r\n    try {\r\n      await Auth.currentSession();\r\n      authenticateLogin();\r\n    }\r\n    catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  async function handleLogout() {\r\n    await Auth.signOut();\r\n\r\n    userHasAuthenticated(false);\r\n    setTokenList([]);\r\n    setMapList([]);\r\n    setCurrentMap(null);\r\n    setGridScale(50);\r\n    setMapScale(1);\r\n    setIsTest(false);\r\n    closeAll();\r\n  }\r\n\r\n  // Toggles signUp form visibility\r\n  function signUp() {\r\n    setSigningUp(true);\r\n  }\r\n\r\n  function confirmSignUp() {\r\n    setSigningUp(false);\r\n  }\r\n\r\n  // Toggles auth form visibility\r\n  function authenticateLogin() {\r\n    userHasAuthenticated(true);\r\n  }\r\n\r\n  // test state handler.\r\n  function runTest() {\r\n    userHasAuthenticated(true);\r\n    setIsTest(true);\r\n  }\r\n\r\n  // User interface functions\r\n\r\n  function tokenInformationHandler(target){\r\n\r\n    let size = tokenList.length;\r\n    let index = -1;\r\n    for(let i = 0;i < size;++i){\r\n      if(tokenList[i].key === target)\r\n        index = i;\r\n    }\r\n\r\n    if(index === -1)\r\n      return;\r\n\r\n    if(tokenList[index].key === selectedToken.key)\r\n      setSelectedToken(false);\r\n    else\r\n      setSelectedToken(tokenList[index])\r\n  }\r\n\r\n  function updateTokenInfoHandler(newInfo){\r\n    console.log(newInfo)\r\n    let newList = [...tokenList];\r\n    let size = newList.length;\r\n    for(let i = 0;i < size;++i){\r\n      if(newList[i].key === newInfo.key)\r\n        newList[i] = newInfo;\r\n    }\r\n\r\n    setTokenList(newList);\r\n  }\r\n\r\n  function toggleOptionTray() {\r\n    setOptionTray(!optionTray);\r\n  }\r\n\r\n  // sets all visible panels to hidden.\r\n  function closeAll() {\r\n    setOptionTray(false);\r\n    setSelectedToken(false);\r\n    setTokenDrawerState(\"drawerClosed\");\r\n    setMapDrawerState(\"drawerClosed\");\r\n  }\r\n\r\n  // Changes classNames. Only affects appearance of elements.\r\n  function toggleModeHandler() {\r\n    if (mode === \"light-mode\") {\r\n      setMode(\"dark-mode\")\r\n      localStorage.setItem('mode', 'dark-mode');\r\n    } else {\r\n      setMode(\"light-mode\")\r\n      localStorage.setItem('mode', 'light-mode');\r\n    }\r\n\r\n  }\r\n\r\n  // Toggles visibility of token tray panel\r\n  function toggleTokenTray() {\r\n\r\n    if (MapDrawerState === \"drawerOpen\")\r\n      toggleMaps();\r\n\r\n    if (TokenDrawerState === \"drawerClosed\")\r\n      setTokenDrawerState(\"drawerDocked\")\r\n    else\r\n      setTokenDrawerState(\"drawerClosed\")\r\n  }\r\n\r\n  // Toggles visibility of map tray panel\r\n  function toggleMaps() {\r\n\r\n    if (TokenDrawerState === \"drawerDocked\")\r\n      toggleTokenTray();\r\n\r\n    if (MapDrawerState === \"drawerClosed\")\r\n      setMapDrawerState(\"drawerOpen\")\r\n    else\r\n      setMapDrawerState(\"drawerClosed\")\r\n  }\r\n\r\n\r\n  // Canvas variable functions\r\n  function changeMap(event) {\r\n    let newMap = mapList[event.target.id[0]]\r\n    setCurrentMap(newMap.img);\r\n  }\r\n\r\n  // function called on slider change in optionTray. Uses slider value to define map scale\r\n  function scaleMap(event) {\r\n    let scale = event.target.value / 50;\r\n    setMapScale(scale);\r\n  }\r\n\r\n  // function called on slider change in optionTray. Uses slider value to define grid scale.\r\n  function scaleGrid(event) {\r\n    let scale = parseInt(event.target.value);\r\n    setGridScale(scale);\r\n  }\r\n\r\n\r\n  // Fetch file from user functions\r\n  async function uploadBackground(event) {\r\n\r\n    let reader = new FileReader();\r\n\r\n    const imageFiles = event.target.files;\r\n    let file = imageFiles[0];\r\n\r\n    // checkMapSize fails if file is too large \r\n    if (!checkMapSize(file))\r\n      return;\r\n\r\n    if (mapList.length > 4) {\r\n      alert(\"You cannot have more than 5 maps uploaded during this stage of development.\");\r\n      return;\r\n    }\r\n\r\n\r\n    let fileKey;\r\n    let gameId;\r\n\r\n    if (!gameList && !isTest) {\r\n      try {\r\n        fileKey = await s3Upload(file, file.type, \"map\");\r\n        gameId = await postFiles(boardState(gameState.mapKeys, gameState.tokenKeys));\r\n        gameState.gameId = gameId.gameid;\r\n        gameState.mapKeys = [fileKey]\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      if (!isTest) {\r\n        try {\r\n          fileKey = await s3Upload(file, file.type, \"map\");\r\n          let list = gameState.mapKeys;\r\n          gameState.mapKeys = [...list, fileKey];\r\n          await updateFile(boardState(gameState.mapKeys, gameState.tokenKeys), gameState.gameId);\r\n        } catch (e) {\r\n          alert(e);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    // This should only happen when isTesting is true\r\n    if (fileKey === undefined) {\r\n      let date = new Date();\r\n      fileKey = date.getTime();\r\n    }\r\n\r\n    reader.onload = () => {\r\n      let img = new Image();\r\n      img.src = reader.result;\r\n\r\n      let newMap = {\r\n        img: img,\r\n        key: fileKey\r\n      }\r\n\r\n      setMapList(mapList => [...mapList, newMap]);\r\n    }\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  async function uploadTokenHandler(event) {\r\n\r\n    const imageFiles = event.target.files;\r\n\r\n    let reader = new FileReader();\r\n    let file = imageFiles[0];\r\n\r\n    // checkTokenSize fails if file is too large \r\n    if (!checkTokenSize(file))\r\n      return;\r\n\r\n    if (tokenList.length > 9) {\r\n      alert(\"You cannot have more than 10 tokens uploaded during this stage of development.\");\r\n      return;\r\n    }\r\n\r\n    let fileKey;\r\n    let gameId;\r\n\r\n    if (!gameList && !isTest) {\r\n      try {\r\n        fileKey = await s3Upload(file, file.type, \"token\");\r\n        gameId = await postFiles(boardState(gameState.mapKeys, gameState.tokenKeys));\r\n        gameState.gameId = gameId.gameid;\r\n        gameState.tokenKeys = [fileKey]\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      if (!isTest) {\r\n        try {\r\n          fileKey = await s3Upload(file, file.type, \"token\");\r\n          let list = gameState.tokenKeys;\r\n          gameState.tokenKeys = [...list, fileKey];\r\n          await updateFile(boardState(gameState.mapKeys, gameState.tokenKeys), gameState.gameId);\r\n        } catch (e) {\r\n          alert(e);\r\n        }\r\n      }\r\n    }\r\n\r\n    // This should only happen when isTesting is true\r\n    if (fileKey === undefined) {\r\n      let date = new Date();\r\n      fileKey = date.getTime();\r\n    }\r\n\r\n    reader.onload = () => {\r\n      let img = new Image();\r\n      img.src = reader.result;\r\n      let newToken = {\r\n        img: img,\r\n        key: fileKey,\r\n        name: \"\"\r\n      }\r\n      setTokenList(tokenList => [...tokenList, newToken]);\r\n    }\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  function checkMapSize(file) {\r\n    if (file && file.size > Constants.MAX_MAP_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${Constants.MAX_MAP_SIZE / 1000000\r\n        } MB.`\r\n      );\r\n      return 0;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  function checkTokenSize(file) {\r\n    if (file && file.size > Constants.MAX_TOKEN_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${Constants.MAX_TOKEN_SIZE / 8000\r\n        } kb.`\r\n      );\r\n      return 0;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <TokenInfo \r\n        mode={mode} \r\n        selected={selectedToken} \r\n        updateTokenInfo={updateTokenInfoHandler}\r\n      />\r\n      {signingUp && <Signup mode={mode} userHasAuthenticated={userHasAuthenticated} confirmSignUp={confirmSignUp} />}\r\n      {!isAuthenticated ?\r\n        <Login\r\n          mode={mode}\r\n          toggleMode={toggleModeHandler}\r\n          runTest={runTest}\r\n          authenticateLogin={authenticateLogin}\r\n          signUp={signUp} confirmSignUp={confirmSignUp}\r\n          handleSubmit={loginHandler}\r\n        />\r\n        :\r\n        <Canvas\r\n          mode={mode}\r\n          gridScale={gridScale}\r\n          currentMap={currentMap}\r\n          mapScale={mapScale}\r\n        />\r\n      }\r\n\r\n      {optionTray &&\r\n        <OptionTray\r\n          mode={mode}\r\n          scaleGrid={scaleGrid}\r\n          scaleMap={scaleMap}\r\n          handleLogout={handleLogout}\r\n          toggleMode={toggleModeHandler}\r\n        />\r\n      }\r\n      <EditTray\r\n        mode={mode}\r\n        toggleTokens={toggleTokenTray}\r\n        toggleMaps={toggleMaps}\r\n        toggleOptions={toggleOptionTray}\r\n        close={closeAll} />\r\n      <TokenDrawer\r\n        mode={mode}\r\n        state={TokenDrawerState}\r\n        getToken={uploadTokenHandler}\r\n        tokens={tokenList}\r\n        deleteToken={deleteToken}\r\n        tokenInformation={tokenInformationHandler}\r\n      />\r\n      <MapDrawer\r\n        mode={mode}\r\n        state={MapDrawerState}\r\n        getMap={uploadBackground}\r\n        maps={mapList} changeMap={changeMap}\r\n        deleteMap={deleteMap}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Amplify } from 'aws-amplify';\r\nimport config from './config';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    mandatorySignIn: true,\r\n    region: config.cognito.REGION,\r\n    userPoolId: config.cognito.USER_POOL_ID,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n  },\r\n  Storage: {\r\n    region: config.s3.REGION,\r\n    bucket: config.s3.BUCKET,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n  },\r\n  API: {\r\n    endpoints: [\r\n      {\r\n        name: \"gameboard\",\r\n        endpoint: config.apiGateway.URL,\r\n        region: config.apiGateway.REGION\r\n      },\r\n    ]\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}