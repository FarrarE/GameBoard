{"version":3,"sources":["Data/tokens/dax.jpg","Data/tokens/pop.jpg","config.js","Components/ToggleMode/index.js","Components/Login/index.js","Components/Signup/index.js","Containers/LoginPage.js","Components/EditTray/index.js","Components/Draggable/index.js","Components/Droppable/index.js","Components/TokenDrawer/index.js","Components/MapDrawer/index.js","Components/OptionTray/index.js","Components/Canvas/index.js","constants.js","Components/TokenInfo/index.js","libs/s3Bucket.js","libs/s3Get.js","libs/postFiles.js","libs/getFiles.js","libs/updateFile.js","libs/deleteFiles.js","Containers/MapPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","ToggleMode","props","className","mode","id","onClick","toggleMode","type","checked","check","readOnly","Login","useState","undefined","email","setEmail","password","setPassword","setMode","useEffect","rel","href","onSubmit","e","handleSubmit","preventDefault","autoFocus","autocomplete","placeholder","onChange","target","value","disabled","length","validateForm","tabIndex","signUp","runTest","Signup","newUser","setNewUser","userName","setUserName","pass","setPass","passConfirm","setPassConfirm","code","setCode","event","a","alert","Auth","username","message","handleConfirmationSubmit","confirmSignUp","signIn","LoginPage","view","setView","currentSession","authenticateLogin","console","log","loginHandler","setLoggedIn","setIsTest","defaultView","checkForUser","EditBar","toggleTokens","toggleMaps","close","toggleOptions","Draggable","x","y","draggable","onDragStart","dataTransfer","setData","src","onTouchStart","onTouchEnd","dragHandler","onTouchMove","touches","clientX","clientY","onDragOver","stopPropagation","children","Droppable","this","onDrop","drop","allowDrop","React","Component","TokenDrawer","selected","setSelected","visibleList","setVisibleList","showOptions","parseInt","hideOptions","tokens","drawerState","state","size","newList","i","name","toLowerCase","includes","push","action","htmlFor","getToken","map","token","index","key","alt","img","onDoubleClick","deleteToken","tokenInformation","MapDrawer","setClassName","setFocus","changeMap","getMap","maps","concat","mapList","deleteMap","deleteHandler","OptionTray","document","getElementById","style","display","handle","min","max","onInput","scaleGrid","bind","scaleMap","handleLogout","Canvas","canvas","setCanvas","oldMap","setOldMap","oldMapScale","setOldMapScale","oldGridScale","setOldGridScale","drawGrid","scale","xOffset","yOffset","width","body","clientWidth","height","clientHeight","objects","getObjects","remove","widthScale","Math","floor","heightScale","start","add","fabric","Line","stroke","selectable","drawBackground","image","mapScale","left","top","Image","fromURL","background","set","setBackgroundImage","renderAll","setSnap","offsetX","offsetY","off","on","round","setCoords","getActiveObject","evt","altKey","isDragging","selection","lastPosX","lastPosY","button","gridScale","vpt","viewportTransform","requestRenderAll","setViewportTransform","delta","deltaY","zoom","getZoom","zoomToPoint","renderIcon","deleteImg","createElement","ctx","styleOverride","fabricObject","cornerSize","save","translate","rotate","util","degreesToRadians","angle","drawImage","restore","deleteObject","eventData","backgroundColor","currentMap","newCanvas","fireRightClick","Object","prototype","controls","deleteControl","Control","cursorStyle","mouseUpHandler","render","onLoad","window","addEventListener","data","getData","tokenImage","scaleToWidth","scaleToHeight","drawToken","getHeight","getWidth","TokenInfo","setDisplay","setName","hpMax","setHpMax","hpMin","setHpMin","handlehpChange","hp","info","updateTokenInfo","file","tag","filename","Date","now","Storage","vault","put","contentType","stored","s3Upload","get","s3Get","postFiles","boardState","API","post","getFiles","updateFile","deleteFiles","db","s3","MapPage","gameList","setGameList","gameId","mapKeys","tokenKeys","gameState","SetGameState","TokenDrawerState","setTokenDrawerState","MapDrawerState","setMapDrawerState","optionTrayState","setOptionTrayState","setMapList","tokenList","setTokenList","setCurrentMap","setMapScale","setGridScale","selectedToken","setSelectedToken","toDrop","setToDrop","content","isTest","games","newState","gameid","newMap","newToken","indexOf","splice","toggleTokenTray","reader","FileReader","imageFiles","files","checkMapSize","fileKey","list","date","getTime","onload","result","readAsDataURL","checkTokenSize","Constants","img2","array","testToken1","testToken2","newToken2","prepareTest","loadDB","newInfo","App","localStorage","getItem","defaultMode","loggedIn","setItem","signOut","Boolean","location","hostname","match","Amplify","configure","mandatorySignIn","region","config","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","renderMethod","ReactDOM","hydrate","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.cf06830d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dax.3ae1a4a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pop.1b43a648.jpg\";","export default {\r\n    s3: {\r\n      REGION: \"us-west-2\",\r\n      BUCKET: \"gameboard-uploads\"\r\n    },\r\n    apiGateway: {\r\n      REGION: \"us-west-2\",\r\n      URL: \"https://k6r2pgn41j.execute-api.us-west-2.amazonaws.com/prod\"\r\n    },\r\n    cognito: {\r\n      REGION: \"us-west-2\",\r\n      USER_POOL_ID: \"us-west-2_55lKkN867\",\r\n      APP_CLIENT_ID: \"1jtkpri800074n0e9amfsekbja\",\r\n      IDENTITY_POOL_ID: \"us-west-2:d02cca9d-cd85-4f92-87bb-4e0ca6b75fdc\"\r\n    }\r\n  };","import React from 'react';\r\nimport './index.css';\r\n\r\nfunction ToggleMode(props) {\r\n    return (\r\n        <div className={props.mode}>\r\n            <div id=\"mode-container\">\r\n                <label>Dark Mode</label>\r\n                <div>\r\n                    <label className=\"switch\">\r\n                        <input onClick={props.toggleMode} type=\"checkbox\" checked={props.check} readOnly />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToggleMode;","import React, { useState, useEffect } from \"react\";\r\nimport ToggleMode from '../ToggleMode';\r\nimport './styles/darkmode.css';\r\nimport './styles/index.css';\r\nimport './styles/lightmode.css';\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState(undefined);\r\n  const [password, setPassword] = useState(undefined);\r\n  const [mode, setMode] = useState(props.mode);\r\n\r\n  useEffect(() => {\r\n    setMode(props.mode);\r\n  }, [props.mode]);\r\n\r\n  function validateForm() {\r\n    if (email && password)\r\n      return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  return (\r\n    <div className={mode}>\r\n      <div className=\"login-page\">\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"./styles/lightmode.css\" />\r\n        <div className={\"ribbon ribbon-\" + mode}>\r\n          <div className={\"title title-\" + mode}>\r\n            <h1 className={\"h1-\" + mode}>\r\n              <span>\r\n                Battlemap Arena\r\n              </span>\r\n            </h1>\r\n            <p>Virtual Tabletop Toolset</p>\r\n          </div>\r\n          <div className=\"login-form\">\r\n            <form\r\n              onSubmit={(e) => {\r\n                props.handleSubmit(email, password);\r\n                e.preventDefault();\r\n              }}>\r\n              <div className=\"login-form-content\">\r\n                <div>\r\n                  <input\r\n                    autoFocus\r\n                    autocomplete=\"off\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={e => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    placeholder=\"Password\"\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <button className=\"login-button lightMode\" disabled={!validateForm()} type=\"submit\" tabIndex=\"3\">\r\n                    <span>\r\n                      Login\r\n                  </span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <div className=\"links\">\r\n              <span>Dont have an account?</span>\r\n              <button onClick={props.signUp} tabIndex=\"1\">Sign up here</button>\r\n              <span>or</span>\r\n              <button onClick={props.runTest} tabIndex=\"2\">Try without signing up</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n      <div id=\"login-toggle\" className={props.mode}>\r\n        <ToggleMode check={props.mode === \"dark-mode\" ? true : false} toggleMode={props.toggleMode} mode={props.mode} />\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport \"./styles/index.css\";\r\nimport \"./styles/lightmode.css\";\r\nimport \"./styles/darkmode.css\";\r\n\r\nexport default function Signup(props) {\r\n\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [userName, setUserName] = useState(null);\r\n  const [pass, setPass] = useState(null);\r\n  const [passConfirm, setPassConfirm] = useState(null);\r\n  const [code, setCode] = useState(null);\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (pass !== passConfirm) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const newUser = await Auth.signUp({\r\n        username: userName,\r\n        password: pass,\r\n      });\r\n\r\n      setNewUser(newUser);\r\n    } catch (e) {\r\n      alert(e.message)\r\n    }\r\n  }\r\n\r\n  async function handleConfirmationSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await Auth.confirmSignUp(userName, code);\r\n      await Auth.signIn(userName, pass);\r\n      props.confirmSignUp();\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  }\r\n\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <div className=\"signup-page\">\r\n        <div className=\"ribbon confirmation\">\r\n          <form onSubmit={handleConfirmationSubmit}>\r\n            <label>Confirmation Code </label>\r\n            <input\r\n              autoFocus\r\n              type=\"tel\"\r\n              onChange={(event) => setCode(event.target.value)}\r\n            />\r\n            <button>Submit</button>\r\n            <h1>Please check your email for the code.</h1>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderForm() {\r\n    return (\r\n      <div className=\"signup-page\">\r\n        <div className=\"ribbon\">\r\n          <div className=\"signup-card\">\r\n            <form onSubmit={handleSubmit} className=\"signup-form\">\r\n              <label>Email</label>\r\n              <input\r\n                autoFocus\r\n                type=\"email\"\r\n                onChange={(event) => setUserName(event.target.value)}\r\n              />\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={(event) => setPass(event.target.value)}\r\n              />\r\n              <label>Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={(event) => setPassConfirm(event.target.value)}\r\n              />\r\n              <div>\r\n                <button type=\"button\" onClick={props.confirmSignUp}>Back</button>\r\n                <span> </span>\r\n                <button type=\"submit\">Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode}>\r\n      {newUser === null ? renderForm() : renderConfirmationForm()}\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nimport Login from \"../Components/Login\";\r\nimport Signup from \"../Components/Signup\";\r\n\r\nfunction LoginPage(props) {\r\n    const [view, setView] = useState(null);\r\n\r\n    useEffect(() => {\r\n        defaultView();\r\n    }, [props.mode]);\r\n\r\n    // wrapper function for login authentication\r\n    async function checkForUser() {\r\n        try {\r\n            await Auth.currentSession();\r\n            authenticateLogin();\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // wrapper function for login credentials\r\n    async function loginHandler(email, password) {\r\n        try {\r\n            await Auth.signIn(email, password);\r\n            authenticateLogin();\r\n            return true;\r\n        } catch (e) {\r\n            alert(\"Login error:\" + e.message);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Toggles auth form visibility\r\n    function authenticateLogin() {\r\n        setView(null);\r\n        props.setLoggedIn(true);\r\n    }\r\n\r\n    // Lets user use application without authentication\r\n    function runTest() {\r\n        setView(null);\r\n        props.setIsTest(true);\r\n    }\r\n\r\n    function confirmSignUp() {\r\n        defaultView();\r\n    }\r\n\r\n    // Sets the home view for the page component\r\n    function defaultView() {\r\n        if(!checkForUser())\r\n            return;\r\n\r\n        setView(\r\n            <Login\r\n                mode={props.mode}\r\n                toggleMode={props.toggleMode}\r\n                runTest={runTest}\r\n                authenticateLogin={authenticateLogin}\r\n                signUp={signUp} confirmSignUp={confirmSignUp}\r\n                handleSubmit={loginHandler}\r\n            />);\r\n    }\r\n\r\n    // Sets view to signUp component\r\n    function signUp() {\r\n        setView(<Signup\r\n            mode={props.mode}\r\n            confirmSignUp={confirmSignUp}\r\n        />);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            {view}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { TiContacts } from 'react-icons/ti';\r\nimport { RiTreasureMapLine } from 'react-icons/ri';\r\nimport { BiCog } from 'react-icons/bi';\r\nimport { CgMinimizeAlt } from 'react-icons/cg';\r\nimport './index.css';\r\nimport './styles/mode.css';\r\n\r\nfunction EditBar(props) {\r\n    return (\r\n        <div className={props.mode}>\r\n            <div className=\"tray\" >\r\n                <div className=\"edit-icon\" onClick={props.toggleTokens}>\r\n                    <TiContacts />\r\n                </div>\r\n                <div className=\"edit-icon\" onClick={props.toggleMaps}>\r\n                    <RiTreasureMapLine />\r\n                </div>\r\n                <div className=\"edit-icon\" onClick={props.close} >\r\n                    <CgMinimizeAlt />\r\n                </div>\r\n                <div className=\"edit-icon\" onClick={props.toggleOptions} >\r\n                    <BiCog />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditBar;","import React from 'react';\r\n\r\nfunction Draggable(props){\r\n    let x;\r\n    let y;\r\n    \r\n    function drag (event) {\r\n        event.dataTransfer.setData('transfer', event.target.src);\r\n    }\r\n\r\n    function onTouch (event) {\r\n        console.log(\"Grabbed\", event)\r\n    }\r\n\r\n    function touchDrag (event){\r\n        console.log(\"Dragging\");\r\n        x = event.touches[0].clientX;\r\n        y = event.touches[0].clientY;\r\n    }\r\n\r\n    function drop (event) {\r\n        let target = { src: null, x: null, y: null };\r\n        target.src = event.target.src;\r\n        target.x = x;\r\n        target.y = y;\r\n        props.dragHandler(target);\r\n    }\r\n\r\n    function noAllowDrop (event) {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div id={props.id}\r\n            draggable=\"true\"\r\n            onDragStart={drag}\r\n            onTouchStart={onTouch}\r\n            onTouchEnd={drop}\r\n            onTouchMove={touchDrag}\r\n            onDragOver={noAllowDrop} >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Draggable;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Droppable extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.id} onDrop={this.props.drop} onDragOver={this.props.allowDrop}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDroppable.propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { RiAddLine } from 'react-icons/ri';\r\nimport { RiContactsLine } from 'react-icons/ri';\r\nimport { RiDeleteBin7Line } from 'react-icons/ri';\r\nimport Draggable from \"../Draggable\";\r\nimport Droppable from \"../Droppable\";\r\nimport './styles/index.css';\r\nimport './styles/mode.css';\r\n\r\nfunction TokenDrawer(props) {\r\n  const [selected, setSelected] = useState(null);\r\n  const [visibleList, setVisibleList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setVisibleList(props.tokens);\r\n  }, [props.tokens]);\r\n\r\n  function showOptions(event) {\r\n    setSelected(parseInt(event.target.id[0]));\r\n  }\r\n\r\n  function hideOptions(event) {\r\n    setSelected(null);\r\n  }\r\n\r\n  let drawerState = 'token-drawer';\r\n  if (props.state === \"drawerDocked\") {\r\n    drawerState = 'token-drawer docked'\r\n  }\r\n  else {\r\n    drawerState = 'token-drawer';\r\n  }\r\n\r\n  function handleSearch(event) {\r\n    if (event.target.value === \"\") {\r\n      setVisibleList(props.tokens);\r\n      return;\r\n    }\r\n\r\n    let size = visibleList.length;\r\n    let newList = [];\r\n\r\n    for (let i = 0; i < size; ++i) {\r\n      if (visibleList[i].name.toLowerCase().includes(event.target.value.toLowerCase()))\r\n        newList.push(visibleList[i])\r\n    }\r\n\r\n    setVisibleList(newList);\r\n    console.log(newList)\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode}>\r\n      <div className={drawerState}>\r\n        <div className=\"searchbar\">\r\n          <input type=\"text\" placeholder=\"Search..\" onChange={handleSearch}></input>\r\n        </div>\r\n        <div className=\"token-container\">\r\n          <div className=\"upload-form-token\">\r\n            <form action=\"/action_page.php\" className=\"token-form\">\r\n              <label htmlFor=\"token-input\" >\r\n                <div className=\"add-icon-token\">\r\n                  <RiAddLine />\r\n                </div>\r\n              </label>\r\n              <input id=\"token-input\" type=\"file\" onChange={props.getToken} />\r\n            </form>\r\n          </div>\r\n          {visibleList[0] ? visibleList.map((token, index) => (\r\n            <div className=\"token-img\" key={token + index}>\r\n              <Droppable id={index + \"droppable\"} >\r\n                <Draggable id={index + \"token\"}\r\n                  dragHandler={props.dragHandler}\r\n                >\r\n                  <div className=\"token-thumbnails\">\r\n                    {(selected === index) ?\r\n                      <img\r\n                        className={\"show-options token\"}\r\n                        alt=\"...\"\r\n                        id={index + \"token\"}\r\n                        draggable=\"true\" src={token.img.src}\r\n                        onDoubleClick={showOptions}\r\n                        onClick={hideOptions}\r\n                      />\r\n                      :\r\n                      <img\r\n                        className=\"token\"\r\n                        alt=\"...\"\r\n                        id={index + \"token\"}\r\n                        draggable=\"true\" src={token.img.src}\r\n                        onDoubleClick={showOptions}\r\n                        onClick={hideOptions}\r\n                      />\r\n                    }\r\n                    <div className=\"token-options\">\r\n                      <div className=\"delete-token option-btn\" onClick={() => props.deleteToken(token.key)}>\r\n                        <RiDeleteBin7Line />\r\n                      </div>\r\n                      <div className=\"info-token option-btn\" onClick={() => props.tokenInformation(token.key)}>\r\n                        <RiContactsLine />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Draggable>\r\n              </Droppable>\r\n            </div>\r\n          ))\r\n            :\r\n            <p>Add a token. Drag and drop the token onto the grid. Scale token to grid by double clicking the token.</p>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TokenDrawer;","import React, { useState } from \"react\";\r\nimport { RiAddLine } from 'react-icons/ri';\r\nimport { RiDeleteBin7Line } from 'react-icons/ri';\r\nimport './styles/index.css';\r\nimport './styles/mode.css';\r\n\r\nfunction MapDrawer(props) {\r\n  const [selected, setSelected] = useState(null);\r\n  const [className, setClassName] = useState(\"selected\");\r\n\r\n  function setFocus(event) {\r\n    setSelected(parseInt(event.target.id[0]));\r\n    props.changeMap(event);\r\n    setClassName(\"selected\");\r\n  }\r\n\r\n  function showOptions(event) {\r\n    setSelected(parseInt(event.target.id[0]));\r\n\r\n    if (className === \"selected show-options\")\r\n      setClassName(\"selected\");\r\n    else\r\n      setClassName(\"selected show-options\");\r\n  }\r\n\r\n  function deleteHandler(key) {\r\n    let mapList = props.maps;\r\n\r\n    let newList = [];\r\n    for (let i = 0; i < mapList.length; i++) {\r\n      if (mapList[i].key !== key) {\r\n        newList.push(mapList[i]);\r\n        console.log(mapList[i].key, key)\r\n      }\r\n    }\r\n    props.deleteMap(newList, key);\r\n  }\r\n\r\n  let drawerState = 'map-drawer';\r\n  if (props.state === \"drawerOpen\") {\r\n    drawerState = 'map-drawer open'\r\n  }\r\n  else {\r\n    drawerState = 'map-drawer';\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode}>\r\n      <div className={drawerState} >\r\n        <div className=\"map-container\">\r\n          <div className=\"upload-form\">\r\n            <form action=\"/action_page.php\" className=\"map-form\">\r\n              <label htmlFor=\"map-file-input\" >\r\n                <div className=\"add-icon\">\r\n                  <RiAddLine />\r\n                </div>\r\n              </label>\r\n              <input id=\"map-file-input\" type=\"file\" onChange={props.getMap} />\r\n            </form>\r\n          </div>\r\n          {props.maps[0] ?\r\n            props.maps.map((map, index) => (\r\n              <div className=\"map-thumbnails\">\r\n                {(selected === index) ?\r\n                  <img\r\n                    className={className.concat(' ', 'map')}\r\n                    src={map.img.src}\r\n                    alt=\"...\"\r\n                    id={index + \"m\"}\r\n                    onClick={setFocus}\r\n                    onDoubleClick={showOptions}\r\n                  />\r\n                  :\r\n                  <img\r\n                    className={\"map\"}\r\n                    src={map.img.src}\r\n                    alt=\"...\"\r\n                    id={index + \"map\"}\r\n                    onClick={setFocus}\r\n                    onDoubleClick={showOptions}\r\n                  />\r\n                }\r\n                <div className=\"delete-map option-btn\" onClick={() => deleteHandler(map.key)} >\r\n                  <RiDeleteBin7Line />\r\n                </div>\r\n              </div>\r\n            ))\r\n            :\r\n            <p>Add a map. Switch maps by clicking on the thumbnails.</p>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapDrawer;","import React, { useEffect, } from \"react\";\r\nimport Draggable from 'react-draggable';\r\nimport ToggleMode from '../ToggleMode';\r\nimport { MdDragHandle } from 'react-icons/md';\r\n\r\nimport './styles/index.css';\r\nimport './styles/mode.css'\r\n\r\nfunction OptionTray(props) {\r\n\r\n    useEffect(()=>{\r\n        if(props.state)\r\n            document.getElementById(\"optionTray\").style.display = 'block';\r\n        else document.getElementById(\"optionTray\").style.display = 'none';\r\n    }, [props.state]);\r\n\r\n    return (\r\n        <div className={props.mode} id=\"optionTray\" >\r\n            <Draggable handle=\".handle\">\r\n                <div className=\"options\">\r\n                    <div>\r\n                        <MdDragHandle className=\"drag-icon handle\" />\r\n                    </div>\r\n                    <div>\r\n                        Grid Size\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"range\" min=\"10\" max=\"100\" className=\"slider\" onInput={props.scaleGrid.bind(this)} />\r\n                    </div>\r\n                    <div>\r\n                        Map Size\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"range\" min=\"10\" max=\"100\" className=\"slider\" onInput={props.scaleMap.bind(this)} />\r\n                    </div>\r\n                    <div>\r\n                        <ToggleMode check={props.mode === \"dark-mode\" ? true : false} toggleMode={props.toggleMode} mode={props.mode} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"logout-button\" onClick={props.handleLogout.bind(this)}><span>Log Out</span></div>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OptionTray;","import React, { useState, useEffect } from \"react\";\r\nimport Droppable from \"../Droppable\";\r\nimport { fabric } from \"fabric\";\r\nimport { MdFilterCenterFocus } from 'react-icons/md';\r\nimport './index.css';\r\nimport * as Constants from \"../../constants\";\r\n\r\n\r\nfunction Canvas(props) {\r\n    const [canvas, setCanvas] = useState(null);\r\n    const [oldMap, setOldMap] = useState(null);\r\n    const [oldMapScale, setOldMapScale] = useState(null);\r\n    const [oldGridScale, setOldGridScale] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        onLoad();\r\n\r\n        window.addEventListener('contextmenu', function (e) {\r\n            // do something here... \r\n            e.preventDefault();\r\n        }, false);\r\n\r\n    }, [props.currentMap, props.gridScale, props.mapScale, props.mode]);\r\n\r\n    // Canvas initialization\r\n    function onLoad() {\r\n\r\n\r\n        if (!canvas) {\r\n            let newCanvas = new fabric.Canvas('canvas', {\r\n                selection: false,\r\n                // height: height,\r\n                // width: width,\r\n                fireRightClick: true,\r\n                //fireMiddleClick: true, \r\n            });\r\n\r\n            if (props.mode === \"dark-mode\")\r\n                newCanvas.backgroundColor = \"#525959\";\r\n\r\n            setCanvas(newCanvas);\r\n            setSnap(newCanvas, props.gridScale)\r\n            drawGrid(newCanvas, props.gridScale);\r\n            drawBackground(props.currentMap);\r\n            setDelete();\r\n\r\n            setOldGridScale(props.gridScale);\r\n            setOldMapScale(props.mapScale);\r\n            setOldMap(props.currentMap);\r\n        } else {\r\n            if (props.mode === \"dark-mode\") {\r\n                canvas.backgroundColor = \"#525959\";\r\n                canvas.renderAll()\r\n            }\r\n            else {\r\n                canvas.backgroundColor = \"white\";\r\n                canvas.renderAll()\r\n            }\r\n\r\n            if (props.gridScale !== oldGridScale) {\r\n                setSnap(canvas, props.gridScale)\r\n                drawGrid(canvas, props.gridScale);\r\n                setOldGridScale(props.gridScale);\r\n            }\r\n            if (props.currentMap !== oldMap | props.mapScale !== oldMapScale) {\r\n                drawBackground(props.currentMap);\r\n                setOldMap(props.currentMap);\r\n                setOldMapScale(props.mapScale)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Renders token to canvas at set coordinates\r\n    function drawToken(tokenImage, x, y) {\r\n\r\n        fabric.Image.fromURL(tokenImage.src, function (img) {\r\n            let background = img.set({ left: x, top: y });\r\n            background.scaleToWidth(props.gridScale);\r\n            background.scaleToHeight(props.gridScale);\r\n            canvas.add(background)\r\n        });\r\n\r\n    }\r\n\r\n    // Renders grid lines to canvas\r\n    function drawGrid(canvas, scale, xOffset = 0, yOffset = 0) {\r\n        let width = document.body.clientWidth;\r\n        let height = document.body.clientHeight;\r\n\r\n        let objects = canvas.getObjects('line');\r\n        for (let i in objects) {\r\n            canvas.remove(objects[i]);\r\n        }\r\n\r\n        let widthScale = Math.floor(height / scale) + 3;\r\n        let heightScale = Math.floor(width / scale) + 3;\r\n        let start = -1*scale;\r\n\r\n        for (let i = 0; i <  widthScale; i++) {\r\n            canvas.add(new fabric.Line([\r\n                (start + xOffset), \r\n                (i * scale) + start + yOffset, \r\n                (width - start)  + xOffset, \r\n                (i * scale) + start + yOffset], \r\n                { stroke: \"grey\", selectable: false }));\r\n        }\r\n        for (let i = 0; i < heightScale; i++) {\r\n            canvas.add(new fabric.Line([\r\n                (i * scale) + start + xOffset, \r\n                (start + yOffset), \r\n                (i * scale) + start + xOffset, \r\n                (height - start) + yOffset], \r\n                { stroke: \"grey\", selectable: false }));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Renders background to canvas\r\n    function drawBackground(image) {\r\n        if (!image)\r\n            return;\r\n\r\n        let scale = props.mapScale;\r\n        let width = document.body.clientWidth;\r\n        let height = document.body.clientHeight;\r\n\r\n        if (image) {\r\n            let left = (width / 2) - ((image.width / 2) * scale);\r\n            let top = (height / 2) - ((image.height / 2) * scale);\r\n\r\n            fabric.Image.fromURL(image.src, function (img) {\r\n                let background = img.set({ left: left, top: top, selectable: false }).scale(scale);\r\n                canvas.setBackgroundImage(background);\r\n                canvas.renderAll();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // Sets the grid snap points for tokens\r\n    function setSnap(canvas, scale, offsetX = 0, offsetY = 0) {\r\n\r\n        // Clears canvas events so events don't stack on rerender\r\n        canvas.off()\r\n        canvas.on('object:moving', function (event) {\r\n\r\n            if(offsetX === 0 && offsetY === 0){\r\n                event.target.left = (Math.round(event.target.left / scale) * scale);\r\n                event.target.top = (Math.round(event.target.top / scale ) * scale);\r\n            }else{\r\n                event.target.left = (Math.round(event.target.left / scale) * scale) +  (offsetX % scale);\r\n                event.target.top = (Math.round(event.target.top / scale ) * scale)  +  (offsetY % scale);\r\n            }\r\n\r\n            event.target.setCoords();\r\n        })\r\n\r\n        canvas.on('mouse:down', function (event) {\r\n            const active = canvas.getActiveObject()\r\n            if (active)\r\n                return;\r\n\r\n            let evt = event.e;\r\n            if (evt.altKey === true) {\r\n                this.isDragging = true;\r\n                this.selection = false;\r\n                this.lastPosX = evt.clientX;\r\n                this.lastPosY = evt.clientY;\r\n            }\r\n\r\n            if (event.button !== 3)\r\n                return;\r\n\r\n            let e = event.e;\r\n            this.isDragging = true;\r\n            this.selection = false;\r\n            this.lastPosX = e.clientX;\r\n            this.lastPosY = e.clientY;\r\n        });\r\n\r\n        canvas.on('mouse:move', function (event) {\r\n            if (this.isDragging) {\r\n\r\n                let e = event.e;\r\n                if (e.altKey === true) {\r\n                    let x = e.clientX - this.lastPosX;\r\n                    let y = e.clientY - this.lastPosY;\r\n\r\n                    if(x >= 20){\r\n                        x = 20;\r\n                    }\r\n                    if(x <= -20){\r\n                        x = -20;\r\n                    }\r\n\r\n                    if(y >= 20){\r\n                        y = 20;\r\n                    }\r\n                    if(y <= -20){\r\n                        y = -20;\r\n                    }\r\n\r\n                    console.log(x + \" \" + y)\r\n                    setSnap(this,props.gridScale, x, y);\r\n                    drawGrid(this, props.gridScale,x,y);\r\n                    return;\r\n                }\r\n\r\n                let vpt = this.viewportTransform;\r\n                vpt[4] += e.clientX - this.lastPosX;\r\n                vpt[5] += e.clientY - this.lastPosY;\r\n                this.requestRenderAll();\r\n                this.lastPosX = e.clientX;\r\n                this.lastPosY = e.clientY;\r\n            }\r\n        });\r\n        canvas.on('mouse:up', function (event) {\r\n            if (this.isDragging) {\r\n\r\n                this.setViewportTransform(this.viewportTransform);\r\n                this.isDragging = false;\r\n                this.selection = true;\r\n                document.getElementById(\"center\").style.display = \"block\";\r\n            }\r\n        });\r\n\r\n        // zooms in and out of canvas\r\n        canvas.on('mouse:wheel', function (event) {\r\n            let delta = event.e.deltaY;\r\n            let zoom = canvas.getZoom();\r\n            zoom *= 0.999 ** delta;\r\n            if (zoom > 20) zoom = 20;\r\n            if (zoom < 0.5) zoom = 0.5;\r\n            canvas.zoomToPoint({ x: event.e.offsetX, y: event.e.offsetY }, zoom);\r\n            event.e.preventDefault();\r\n            event.e.stopPropagation();\r\n            document.getElementById(\"center\").style.display = \"block\";\r\n        });\r\n    }\r\n\r\n    function recenterCanvas() {\r\n\r\n        let zoom = canvas.getZoom();\r\n        let width = document.body.clientWidth;\r\n        let height = document.body.clientHeight;\r\n        let x = (height / 2) - ((canvas.getHeight() / 2) * zoom);\r\n        let y = (width / 2) - ((canvas.getWidth() / 2) * zoom);\r\n        canvas.viewportTransform[4] = y;\r\n        canvas.viewportTransform[5] = x;\r\n        canvas.requestRenderAll();\r\n        canvas.lastPosX = x;\r\n        canvas.lastPosY = y;\r\n        document.getElementById(\"center\").style.display = \"none\";\r\n    }\r\n\r\n    // Renders the delete icon from svg source.\r\n    function renderIcon() {\r\n        let deleteIcon = Constants.DELETE_ICON;\r\n\r\n        let deleteImg = document.createElement('img');\r\n        deleteImg.src = deleteIcon;\r\n\r\n\r\n        return function renderIcon(ctx, left, top, styleOverride, fabricObject) {\r\n            let size = this.cornerSize;\r\n            ctx.save();\r\n            ctx.translate(left, top);\r\n            ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle));\r\n            ctx.drawImage(deleteImg, -size / 2, -size / 2, size, size);\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    // Places the delete icon to the corner of each token.\r\n    function setDelete() {\r\n        fabric.Object.prototype.controls.deleteControl = new fabric.Control({\r\n            x: 0.5,\r\n            y: -0.5,\r\n            offsetY: -16,\r\n            offsetX: 16,\r\n            cursorStyle: 'pointer',\r\n            mouseUpHandler: deleteObject,\r\n            render: renderIcon(),\r\n            cornerSize: 24\r\n        });\r\n    }\r\n\r\n    // Onclick handler for delete icon. Removes selected object.\r\n    function deleteObject(eventData, target) {\r\n        let canvas = target.canvas;\r\n        canvas.remove(target);\r\n        canvas.requestRenderAll();\r\n    }\r\n\r\n\r\n    // Droppable functions\r\n\r\n    function drop(event) {\r\n        event.preventDefault();\r\n        const data = event.dataTransfer.getData('transfer');\r\n\r\n        let tokenImage = new Image();\r\n        tokenImage.src = data;\r\n\r\n        let x = event.clientX;\r\n        let y = event.clientY;\r\n        drawToken(tokenImage, x, y);\r\n    }\r\n\r\n    function allowDrop(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Droppable drop={drop} allowDrop={allowDrop}>\r\n            <div id=\"center\" onClick={recenterCanvas}><MdFilterCenterFocus /></div>\r\n            <canvas id=\"canvas\" width={document.body.clientWidth} height={document.body.clientHeight} />\r\n        </Droppable>\r\n    );\r\n}\r\n\r\nexport default Canvas;","export const MAX_MAP_SIZE = 2000000;\r\nexport const MAX_TOKEN_SIZE = 200000;\r\nexport let DELETE_ICON = \"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg version='1.1' id='Ebene_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='595.275px' height='595.275px' viewBox='200 215 230 470' xml:space='preserve'%3E%3Ccircle style='fill:%23F44336;' cx='299.76' cy='439.067' r='218.516'/%3E%3Cg%3E%3Crect x='267.162' y='307.978' transform='matrix(0.7071 -0.7071 0.7071 0.7071 -222.6202 340.6915)' style='fill:white;' width='65.545' height='262.18'/%3E%3Crect x='266.988' y='308.153' transform='matrix(0.7071 0.7071 -0.7071 0.7071 398.3889 -83.3116)' style='fill:white;' width='65.544' height='262.179'/%3E%3C/g%3E%3C/svg%3E\";","import React, { useState, useEffect } from \"react\";\r\nimport Draggable from 'react-draggable';\r\nimport { MdDragHandle } from 'react-icons/md';\r\nimport './styles/index.css';\r\nimport './styles/mode.css'\r\n\r\nfunction TokenInfo(props) {\r\n    const [display, setDisplay] = useState(\"none\");\r\n    const [name, setName] = useState(\"\");\r\n    const [hpMax, setHpMax] = useState(\"\");\r\n    const [hpMin, setHpMin] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.selected) {\r\n            setDisplay(\"display\");\r\n            setName(props.selected.name);\r\n            setHpMax(props.selected.hp.max);\r\n            setHpMin(props.selected.hp.min);\r\n        } else setDisplay(\"none\");\r\n\r\n    }, [props.selected]);\r\n\r\n    function handleNameChange(event) {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    function handlehpChange(event) {\r\n        let target = event.target.id;\r\n\r\n        if (target === \"hpMax\")\r\n            setHpMax(event.target.value);\r\n        else\r\n            setHpMin(event.target.value);\r\n    }\r\n\r\n    function handleSave() {\r\n        let info = props.selected;\r\n        info.name = name;\r\n        info.hp = {max:hpMax,min:hpMin};\r\n        props.updateTokenInfo(info);\r\n    }\r\n\r\n    return (\r\n        <div className={props.mode + \" \" + display}>\r\n            <Draggable handle=\".handle\">\r\n                <div className=\"token-information\">\r\n                    <div>\r\n                        <MdDragHandle className=\"drag-icon handle\" />\r\n                    </div>\r\n                    <input type=\"text\" placeholder=\"Name\" value={name} onChange={handleNameChange} />\r\n                    <div className=\"binary-tracker\">\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"hpMin\"\r\n                            value={hpMin}\r\n                            onChange={handlehpChange}\r\n                        />\r\n                        <span> / </span>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"hpMax\"\r\n                            value={hpMax}\r\n                            onChange={handlehpChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <button className=\"info-button\" onClick={handleSave}>Save</button>\r\n                </div>\r\n            </Draggable>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TokenInfo;","import { Storage } from \"aws-amplify\";\r\n\r\nasync function s3Upload(file, type, tag) {\r\n  const filename = `${Date.now()}${tag}`;\r\n\r\n  const stored = await Storage.vault.put(filename, file, {\r\n    contentType: type,\r\n  });\r\n\r\n  return stored.key;\r\n}\r\n\r\nexport default s3Upload;","import { Storage } from \"aws-amplify\";\r\n\r\nasync function s3Get(key) {\r\n  const stored = await Storage.vault.get(key);\r\n\r\n  return stored;\r\n}\r\n\r\nexport default s3Get;","import { API } from \"aws-amplify\";\r\n\r\nexport default function postFiles(boardState) {\r\n    return API.post(\"gameboard\", \"/gameboard\", {\r\n      body: boardState\r\n    });\r\n}","import { API } from \"aws-amplify\";\r\n\r\nexport default async function getFiles(){\r\n    return API.get(\"gameboard\", `/gameboard`);\r\n}","import { API } from \"aws-amplify\";\r\n\r\nexport default function updateFile(boardState, id) {\r\n    return API.put(\"gameboard\", `/gameboard/${id}`, {\r\n      body: boardState\r\n    });\r\n}","import { Storage } from \"aws-amplify\";\r\nimport updateFile from './updateFile';\r\n\r\nexport default async function deleteFiles(id, boardState, key) {\r\n    const stored = {\r\n        db: null,\r\n        s3: null\r\n    }\r\n\r\n    stored.db = await updateFile(boardState, id);\r\n    stored.s3 = await Storage.vault.remove(key);\r\n    return stored;\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport * as Constants from '../constants';\r\n\r\n// Components\r\nimport EditTray from '../Components/EditTray';\r\nimport TokenDrawer from '../Components/TokenDrawer';\r\nimport MapDrawer from '../Components/MapDrawer';\r\nimport OptionTray from '../Components/OptionTray';\r\nimport Canvas from \"../Components/Canvas\";\r\nimport TokenInfo from \"../Components/TokenInfo\";\r\n\r\n// Backend Imports\r\nimport s3Upload from \"../libs/s3Bucket\";\r\nimport s3Get from '../libs/s3Get';\r\nimport postFiles from '../libs/postFiles';\r\nimport getFiles from '../libs/getFiles';\r\nimport updateFile from '../libs/updateFile';\r\nimport deleteFiles from '../libs/deleteFiles';\r\n\r\nimport testToken1 from '../Data/tokens/dax.jpg';\r\nimport testToken2 from '../Data/tokens/pop.jpg';\r\n\r\nfunction MapPage(props) {\r\n    // List of game states\r\n    const [gameList, setGameList] = useState(null);\r\n\r\n    // Current game state\r\n    const [gameState, SetGameState] = useState({ gameId: null, mapKeys: [], tokenKeys: [] });\r\n\r\n    // User interface variables\r\n    const [TokenDrawerState, setTokenDrawerState] = useState(\"drawerClosed\");\r\n    const [MapDrawerState, setMapDrawerState] = useState(\"drawerClosed\");\r\n    const [optionTrayState, setOptionTrayState] = useState(false);\r\n\r\n    // Canvas state variables\r\n    const [mapList, setMapList] = useState([]);\r\n    const [tokenList, setTokenList] = useState([]);\r\n    const [currentMap, setCurrentMap] = useState(null);\r\n    const [mapScale, setMapScale] = useState(1);\r\n    const [gridScale, setGridScale] = useState(50);\r\n    const [selectedToken, setSelectedToken] = useState(false)\r\n    const [toDrop, setToDrop] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (props.isTest)\r\n            prepareTest();\r\n\r\n        loadDB();\r\n    }, []);\r\n\r\n\r\n    // This function creates an initial board state so none-users can try out the application.\r\n    function prepareTest() {\r\n\r\n        let img = [];\r\n        let img2 = [];\r\n        let array = [];\r\n\r\n        img.src = testToken1;\r\n        img2.src = testToken2;\r\n        \r\n        let newToken = {\r\n            img: img,\r\n            key: \"testToken1\",\r\n            name: \"Dax\",\r\n            hp: {max:0,min:0}\r\n        }\r\n\r\n        let newToken2 = {\r\n            img: img2,\r\n            key: \"testToken2\",\r\n            name: \"Pop\",\r\n            hp: {max:0,min:0}\r\n        }\r\n\r\n        array.push(newToken);\r\n        array.push(newToken2);\r\n\r\n        setTokenList(array);\r\n    }\r\n\r\n    // State object function. Returns an object with the correct attributes to match schema for backend.\r\n    function boardState(maps, tokens) {\r\n        const state = {\r\n            content: {\r\n                maps: maps,\r\n                tokens: tokens\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n\r\n    // Backend file upload functions\r\n\r\n    // Fetches information from DB using the libs hook getFiles.\r\n    async function loadDB() {\r\n        if (props.isTest)\r\n            return;\r\n\r\n        try {\r\n            // getFiles is a lib function that queries backend for content\r\n            const games = await getFiles();\r\n\r\n            if (games[0]) {\r\n                // Stores information\r\n                setGameList(games);\r\n\r\n                // parses out that information into state\r\n                let newState = gameState;\r\n\r\n                newState.gameId = games[0].gameid;\r\n                newState.mapKeys = games[0].content.maps;\r\n                newState.tokenKeys = games[0].content.tokens;\r\n                SetGameState(newState);\r\n\r\n                // Fetches assets from backend and populates local data structures\r\n                for (let i = 0; i < gameState.mapKeys.length; ++i) {\r\n                    let file = await s3Get(gameState.mapKeys[i]);\r\n                    let img = new Image();\r\n                    img.src = file;\r\n\r\n                    let newMap = {\r\n                        img: img,\r\n                        key: gameState.mapKeys[i]\r\n                    }\r\n\r\n                    setMapList(mapList => [...mapList, newMap]);\r\n                }\r\n\r\n                for (let i = 0; i < gameState.tokenKeys.length; ++i) {\r\n                    let file = await s3Get(gameState.tokenKeys[i]);\r\n                    let img = new Image();\r\n                    img.src = file;\r\n\r\n                    let newToken = {\r\n                        img: img,\r\n                        key: gameState.tokenKeys[i]\r\n                    }\r\n\r\n                    setTokenList(tokenList => [...tokenList, newToken]);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    // onClick handler for map removal\r\n    async function deleteMap(newList, key) {\r\n        if (props.isTest) {\r\n            setMapList(newList);\r\n            return;\r\n        }\r\n        try {\r\n            let index = gameState.mapKeys.indexOf(key + \"map\");\r\n            if (index > -1) {\r\n                gameState.mapKeys.splice(index, 1);\r\n                // Array needs to be copied so when setMapList is called, the app rerenders.\r\n                newList.splice(index, 1);\r\n                setMapList(newList);\r\n            }\r\n            const newState = boardState(gameState.mapKeys, gameState.tokenKeys);\r\n            await deleteFiles(gameState.gameId, newState, key);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    // onClick handler for token removal\r\n    async function deleteToken(key) {\r\n\r\n        // If not logged in, delete works locally only.\r\n        if (props.isTest) {\r\n            let newList = [];\r\n            for (let i = 0; i < tokenList.length; i++) {\r\n                if (tokenList[i].key !== key) {\r\n                    newList.push(tokenList[i]);\r\n                }\r\n            }\r\n            setTokenList(newList);\r\n            return;\r\n        }\r\n\r\n        // If logged in, delete needs update DB\r\n        try {\r\n            let index = gameState.tokenKeys.indexOf(key);\r\n            if (index > -1) {\r\n                gameState.tokenKeys.splice(index, 1);\r\n\r\n                // Array needs to be copied so when setMapList is called, the app rerenders.\r\n                let newList = [...tokenList];\r\n                newList.splice(index, 1);\r\n                setTokenList(newList);\r\n            }\r\n\r\n            const newState = boardState(gameState.mapKeys, gameState.tokenKeys);\r\n            await deleteFiles(gameState.gameId, newState, key);\r\n        } catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n\r\n    // User interface functions\r\n\r\n    function tokenInformationHandler(target) {\r\n\r\n        let size = tokenList.length;\r\n        let index = -1;\r\n        for (let i = 0; i < size; ++i) {\r\n            if (tokenList[i].key === target)\r\n                index = i;\r\n        }\r\n\r\n        if (index === -1)\r\n            return;\r\n\r\n        if (tokenList[index].key === selectedToken.key)\r\n            setSelectedToken(false);\r\n        else\r\n            setSelectedToken(tokenList[index])\r\n    }\r\n\r\n    function updateTokenInfoHandler(newInfo) {\r\n        let newList = [...tokenList];\r\n        let size = newList.length;\r\n        for (let i = 0; i < size; ++i) {\r\n            if (newList[i].key === newInfo.key)\r\n                newList[i] = newInfo;\r\n        }\r\n\r\n        setTokenList(newList);\r\n    }\r\n\r\n    function toggleOptionTray() {\r\n        setOptionTrayState(!optionTrayState);\r\n    }\r\n\r\n    // sets all visible panels to hidden.\r\n    function closeAll() {\r\n        setOptionTrayState(false);\r\n        setSelectedToken(false);\r\n        setTokenDrawerState(\"drawerClosed\");\r\n        setMapDrawerState(\"drawerClosed\");\r\n    }\r\n\r\n    // Toggles visibility of token tray panel\r\n    function toggleTokenTray() {\r\n\r\n        if (MapDrawerState === \"drawerOpen\")\r\n            toggleMaps();\r\n\r\n        if (TokenDrawerState === \"drawerClosed\")\r\n            setTokenDrawerState(\"drawerDocked\")\r\n        else\r\n            setTokenDrawerState(\"drawerClosed\")\r\n    }\r\n\r\n    // Toggles visibility of map tray panel\r\n    function toggleMaps() {\r\n\r\n        if (TokenDrawerState === \"drawerDocked\")\r\n            toggleTokenTray();\r\n\r\n        if (MapDrawerState === \"drawerClosed\")\r\n            setMapDrawerState(\"drawerOpen\")\r\n        else\r\n            setMapDrawerState(\"drawerClosed\")\r\n    }\r\n\r\n\r\n    // Canvas variable functions\r\n    function changeMap(event) {\r\n        let newMap = mapList[event.target.id[0]]\r\n        setCurrentMap(newMap.img);\r\n    }\r\n\r\n    // function called on slider change in optionTray. Uses slider value to define map scale\r\n    function scaleMap(event) {\r\n        let scale = event.target.value / 50;\r\n        setMapScale(scale);\r\n    }\r\n\r\n    // function called on slider change in optionTray. Uses slider value to define grid scale.\r\n    function scaleGrid(event) {\r\n        let scale = parseInt(event.target.value);\r\n        setGridScale(scale);\r\n    }\r\n\r\n\r\n    // Fetch file from user functions\r\n    async function uploadBackground(event) {\r\n\r\n        let reader = new FileReader();\r\n\r\n        const imageFiles = event.target.files;\r\n        let file = imageFiles[0];\r\n\r\n        // checkMapSize fails if file is too large \r\n        if (!checkMapSize(file))\r\n            return;\r\n\r\n        if (mapList.length > 4) {\r\n            alert(\"You cannot have more than 5 maps uploaded during this stage of development.\");\r\n            return;\r\n        }\r\n\r\n\r\n        let fileKey;\r\n        let gameId;\r\n\r\n        if (!gameList && !props.isTest) {\r\n            try {\r\n                fileKey = await s3Upload(file, file.type, \"map\");\r\n                gameId = await postFiles(boardState(gameState.mapKeys, gameState.tokenKeys));\r\n                gameState.gameId = gameId.gameid;\r\n                gameState.mapKeys = [fileKey]\r\n            } catch (e) {\r\n                alert(e);\r\n            }\r\n        } else {\r\n            if (!props.isTest) {\r\n                try {\r\n                    fileKey = await s3Upload(file, file.type, \"map\");\r\n                    let list = gameState.mapKeys;\r\n                    gameState.mapKeys = [...list, fileKey];\r\n                    await updateFile(boardState(gameState.mapKeys, gameState.tokenKeys), gameState.gameId);\r\n                } catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // This should only happen when props.isTesting is true\r\n        if (fileKey === undefined) {\r\n            let date = new Date();\r\n            fileKey = date.getTime();\r\n        }\r\n\r\n        reader.onload = () => {\r\n            let img = new Image();\r\n            img.src = reader.result;\r\n\r\n            let newMap = {\r\n                img: img,\r\n                key: fileKey\r\n            }\r\n\r\n            setMapList(mapList => [...mapList, newMap]);\r\n        }\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    async function uploadTokenHandler(event) {\r\n\r\n        const imageFiles = event.target.files;\r\n\r\n        let reader = new FileReader();\r\n        let file = imageFiles[0];\r\n\r\n        // checkTokenSize fails if file is too large \r\n        if (!checkTokenSize(file))\r\n            return;\r\n\r\n        if (tokenList.length > 9) {\r\n            alert(\"You cannot have more than 10 tokens uploaded during this stage of development.\");\r\n            return;\r\n        }\r\n\r\n        let fileKey;\r\n        let gameId;\r\n\r\n        if (!gameList && !props.isTest) {\r\n            try {\r\n                fileKey = await s3Upload(file, file.type, \"token\");\r\n                gameId = await postFiles(boardState(gameState.mapKeys, gameState.tokenKeys));\r\n                gameState.gameId = gameId.gameid;\r\n                gameState.tokenKeys = [fileKey]\r\n            } catch (e) {\r\n                alert(e);\r\n            }\r\n        } else {\r\n            if (!props.isTest) {\r\n                try {\r\n                    fileKey = await s3Upload(file, file.type, \"token\");\r\n                    let list = gameState.tokenKeys;\r\n                    gameState.tokenKeys = [...list, fileKey];\r\n                    await updateFile(boardState(gameState.mapKeys, gameState.tokenKeys), gameState.gameId);\r\n                } catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        }\r\n\r\n        // This should only happen when props.isTesting is true\r\n        if (fileKey === undefined) {\r\n            let date = new Date();\r\n            fileKey = date.getTime();\r\n        }\r\n\r\n        reader.onload = () => {\r\n            let img = new Image();\r\n            img.src = reader.result;\r\n            let newToken = {\r\n                img: img,\r\n                key: fileKey,\r\n                name: \"\",\r\n                hp: {max:0,min:0}\r\n            }\r\n            setTokenList(tokenList => [...tokenList, newToken]);\r\n        }\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    function checkMapSize(file) {\r\n        if (file && file.size > Constants.MAX_MAP_SIZE) {\r\n            alert(\r\n                `Please pick a file smaller than ${Constants.MAX_MAP_SIZE / 1000000\r\n                } MB.`\r\n            );\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    function checkTokenSize(file) {\r\n        if (file && file.size > Constants.MAX_TOKEN_SIZE) {\r\n            alert(\r\n                `Please pick a file smaller than ${Constants.MAX_TOKEN_SIZE / 8000\r\n                } kb.`\r\n            );\r\n            return 0;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    function dragHandler(target){\r\n        setToDrop(target);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Canvas\r\n                mode={props.mode}\r\n                gridScale={gridScale}\r\n                currentMap={currentMap}\r\n                mapScale={mapScale}\r\n                toDrop={toDrop}\r\n                setToDrop={setToDrop}\r\n            />\r\n            <OptionTray\r\n                mode={props.mode}\r\n                scaleGrid={scaleGrid}\r\n                scaleMap={scaleMap}\r\n                toggleMode={props.toggleMode}\r\n                handleLogout={props.handleLogout}\r\n                state={optionTrayState}\r\n            />\r\n            <EditTray\r\n                mode={props.mode}\r\n                toggleTokens={toggleTokenTray}\r\n                toggleMaps={toggleMaps}\r\n                toggleOptions={toggleOptionTray}\r\n                close={closeAll}\r\n            />\r\n            <TokenDrawer\r\n                mode={props.mode}\r\n                state={TokenDrawerState}\r\n                getToken={uploadTokenHandler}\r\n                tokens={tokenList}\r\n                deleteToken={deleteToken}\r\n                tokenInformation={tokenInformationHandler}\r\n                dragHandler={dragHandler}\r\n            />\r\n            <MapDrawer\r\n                mode={props.mode}\r\n                state={MapDrawerState}\r\n                getMap={uploadBackground}\r\n                maps={mapList} changeMap={changeMap}\r\n                deleteMap={deleteMap}\r\n            />\r\n            <TokenInfo\r\n                mode={props.mode}\r\n                selected={selectedToken}\r\n                updateTokenInfo={updateTokenInfoHandler}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapPage;","import React, { useState, useEffect } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nimport LoginPage from './Containers/LoginPage';\r\nimport MapPage from './Containers/MapPage';\r\n\r\n// css and constants\r\nimport './App.css';\r\n\r\nfunction App(props) {\r\n  const [mode, setMode] = useState(defaultMode());\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [isTest, setIsTest] = useState(false);\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  // Checks if user has set mode previously by checking local storage\r\n  function defaultMode() {\r\n    let stored = localStorage.getItem('mode');\r\n    if (stored === null)\r\n      return \"light-mode\"\r\n    else return stored;\r\n  }\r\n\r\n  // Saves mode to local storage and toggles between the two modes\r\n  function toggleMode() {\r\n    if (mode === \"light-mode\") {\r\n      setMode(\"dark-mode\")\r\n      localStorage.setItem('mode', 'dark-mode');\r\n    } else {\r\n      setMode(\"light-mode\")\r\n      localStorage.setItem('mode', 'light-mode');\r\n    }\r\n  }\r\n\r\n  async function handleLogout() {\r\n    try {\r\n      await Auth.signOut();\r\n    } catch (e) { console.log(e) }\r\n    setIsTest(false);\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {(loggedIn || isTest) ?\r\n        <MapPage\r\n          mode={mode}\r\n          isTest={isTest}\r\n          toggleMode={toggleMode}\r\n          handleLogout={handleLogout}\r\n        />\r\n        :\r\n        <LoginPage\r\n          mode={mode}\r\n          toggleMode={toggleMode}\r\n          setIsTest={setIsTest}\r\n          setLoggedIn={setLoggedIn}\r\n        />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Amplify } from 'aws-amplify';\r\nimport config from './config';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    mandatorySignIn: true,\r\n    region: config.cognito.REGION,\r\n    userPoolId: config.cognito.USER_POOL_ID,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n  },\r\n  Storage: {\r\n    region: config.s3.REGION,\r\n    bucket: config.s3.BUCKET,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n  },\r\n  API: {\r\n    endpoints: [\r\n      {\r\n        name: \"gameboard\",\r\n        endpoint: config.apiGateway.URL,\r\n        region: config.apiGateway.REGION\r\n      },\r\n    ]\r\n  }\r\n});\r\n\r\nconst renderMethod = module.hot ? ReactDOM.render : ReactDOM.hydrate;\r\nrenderMethod(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}