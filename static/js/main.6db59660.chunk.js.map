{"version":3,"sources":["Data/tokens/dax.jpg","Data/tokens/pop.jpg","config.js","Components/EditTray/index.js","Components/Draggable/index.js","Components/Droppable/index.js","constants.js","Components/TokenDrawer/index.js","Components/MapDrawer/index.js","Components/ToggleMode/index.js","Components/OptionTray/index.js","Components/Login/index.js","Components/Signup/index.js","Components/Canvas/index.js","libs/s3Bucket.js","libs/s3Get.js","libs/postFiles.js","libs/getFiles.js","libs/updateFile.js","libs/deleteFiles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","REGION","BUCKET","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","EditBar","props","className","mode","onClick","toggleTokens","toggleMaps","close","toggleOptions","Draggable","drag","event","dataTransfer","setData","target","src","noAllowDrop","stopPropagation","id","this","draggable","onDragStart","onDragOver","children","React","Component","Droppable","onDrop","drop","allowDrop","DELETE_ICON","TokenDrawer","useState","selected","setSelected","showOptions","parseInt","hideOptions","drawerState","state","action","for","type","onChange","getToken","tokens","map","token","index","alt","img","onDoubleClick","Constants","deleteToken","key","MapDrawer","setClassName","setFocus","changeMap","getMap","maps","deleteMap","ToggleMode","class","toggleMode","checked","check","OptionTray","handle","min","max","onInput","scaleGrid","bind","scaleMap","handleLogout","undefined","email","setEmail","password","setPassword","setMode","useEffect","rel","href","onSubmit","e","handleSubmit","preventDefault","autoFocus","value","placeholder","disabled","length","validateForm","tabIndex","signUp","runTest","Signup","newUser","setNewUser","setIsLoading","userName","setUserName","pass","setPass","passConfirm","setPassConfirm","code","setCode","a","alert","Auth","username","message","handleConfirmationSubmit","confirmSignUp","signIn","userHasAuthenticated","Canvas","canvas","setCanvas","oldMap","setOldMap","oldMapScale","setOldMapScale","oldGridScale","setOldGridScale","drawGrid","scale","width","document","body","clientWidth","height","clientHeight","objects","getObjects","i","remove","add","fabric","Line","stroke","selectable","drawBackground","image","mapScale","left","top","Image","fromURL","background","set","setBackgroundImage","renderAll","setSnap","off","on","eventions","Math","round","setCoords","active","getActiveObject","scaleToWidth","scaleToHeight","evt","altKey","isDragging","selection","lastPosX","clientX","lastPosY","clientY","button","vpt","viewportTransform","requestRenderAll","setViewportTransform","getElementById","style","display","delta","deltaY","zoom","getZoom","zoomToPoint","x","offsetX","y","offsetY","renderIcon","deleteImg","createElement","ctx","styleOverride","fabricObject","size","cornerSize","save","translate","rotate","util","degreesToRadians","angle","drawImage","restore","deleteObject","eventData","backgroundColor","gridScale","currentMap","newCanvas","fireRightClick","Object","prototype","controls","deleteControl","Control","cursorStyle","mouseUpHandler","render","onLoad","window","addEventListener","data","getData","tokenImage","drawToken","getHeight","getWidth","file","tag","filename","Date","now","Storage","vault","put","contentType","stored","s3Upload","get","s3Get","postFiles","boardState","API","post","getFiles","updateFile","deleteFiles","db","s3","App","gameList","setGameList","gameId","mapKeys","tokenKeys","gameState","localStorage","getItem","TokenDrawerState","setTokenDrawerState","MapDrawerState","setMapDrawerState","optionTray","setOptionTray","mapList","setMapList","tokenList","setTokenList","setCurrentMap","setMapScale","setGridScale","signingUp","setSigningUp","isAuthenticated","isTest","setIsTest","content","games","gameid","newMap","newToken","newList","Array","push","indexOf","splice","newState","authenticateLogin","currentSession","console","log","signOut","closeAll","toggleModeHandler","setItem","toggleTokenTray","reader","FileReader","imageFiles","files","checkMapSize","fileKey","list","date","getTime","onload","result","readAsDataURL","checkTokenSize","checkForUser","loadDB","img2","array","testToken1","testToken2","newToken2","prepareTest","Login","Boolean","location","hostname","match","Amplify","configure","mandatorySignIn","region","config","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","name","endpoint","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6db59660.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dax.3ae1a4a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pop.1b43a648.jpg\";","export default {\r\n    s3: {\r\n      REGION: \"us-west-2\",\r\n      BUCKET: \"gameboard-uploads\"\r\n    },\r\n    apiGateway: {\r\n      REGION: \"us-west-2\",\r\n      URL: \"https://k6r2pgn41j.execute-api.us-west-2.amazonaws.com/prod\"\r\n    },\r\n    cognito: {\r\n      REGION: \"us-west-2\",\r\n      USER_POOL_ID: \"us-west-2_55lKkN867\",\r\n      APP_CLIENT_ID: \"1jtkpri800074n0e9amfsekbja\",\r\n      IDENTITY_POOL_ID: \"us-west-2:d02cca9d-cd85-4f92-87bb-4e0ca6b75fdc\"\r\n    }\r\n  };","import React from 'react';\r\nimport { TiContacts } from 'react-icons/ti';\r\nimport { RiTreasureMapLine } from 'react-icons/ri';\r\nimport { BiCog } from 'react-icons/bi';\r\nimport { CgMinimizeAlt } from 'react-icons/cg';\r\nimport './index.css';\r\nimport './styles/mode.css';\r\n\r\nfunction EditBar(props) {\r\n    return (\r\n        <div className={props.mode}>\r\n            <div className=\"tray\">\r\n                <div className=\"edit-icon\">\r\n                    <TiContacts onClick={props.toggleTokens} />\r\n                </div>\r\n\r\n                <div className=\"edit-icon\">\r\n                    <RiTreasureMapLine onClick={props.toggleMaps} />\r\n                </div>\r\n                <div className=\"edit-icon\">\r\n                    <CgMinimizeAlt onClick={props.close} />\r\n                </div>\r\n                <div className=\"edit-icon\">\r\n                    <BiCog onClick={props.toggleOptions} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Draggable extends React.Component{\r\n    drag = (event) =>{\r\n        event.dataTransfer.setData('transfer', event.target.src);\r\n    }\r\n\r\n    noAllowDrop = (event) =>{\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.id} draggable=\"true\" onDragStart={this.drag} onDragOver={this.noAllowDrop} >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Droppable extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.id} onDrop={this.props.drop} onDragOver={this.props.allowDrop}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDroppable.propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node\r\n}","export const MAX_MAP_SIZE = 200000;\r\nexport const MAX_TOKEN_SIZE = 160000;\r\nexport let DELETE_ICON = \"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg version='1.1' id='Ebene_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='595.275px' height='595.275px' viewBox='200 215 230 470' xml:space='preserve'%3E%3Ccircle style='fill:%23F44336;' cx='299.76' cy='439.067' r='218.516'/%3E%3Cg%3E%3Crect x='267.162' y='307.978' transform='matrix(0.7071 -0.7071 0.7071 0.7071 -222.6202 340.6915)' style='fill:white;' width='65.545' height='262.18'/%3E%3Crect x='266.988' y='308.153' transform='matrix(0.7071 0.7071 -0.7071 0.7071 398.3889 -83.3116)' style='fill:white;' width='65.544' height='262.179'/%3E%3C/g%3E%3C/svg%3E\";","import React, { useState } from \"react\";\r\nimport { RiAddLine } from 'react-icons/ri';\r\nimport Draggable from \"../Draggable\";\r\nimport Droppable from \"../Droppable\";\r\nimport * as Constants from '../../constants';\r\nimport './styles/index.css';\r\nimport './styles/mode.css';\r\n\r\nfunction TokenDrawer(props) {\r\n  const [selected, setSelected] = useState(null);\r\n  const [className, setClassName] = useState(\"show-options\");\r\n\r\n  function showOptions(event) {\r\n    setSelected(parseInt(event.target.id[0]));\r\n  }\r\n\r\n  function hideOptions(event) {\r\n    setSelected(null);\r\n  }\r\n\r\n  let drawerState = 'token-drawer';\r\n  if (props.state === \"drawerDocked\") {\r\n    drawerState = 'token-drawer docked'\r\n  }\r\n  else {\r\n    drawerState = 'token-drawer';\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode}>\r\n      <div className={drawerState}> \r\n        <div className=\"token-container\">\r\n          <div className=\"upload-form-token\">\r\n            <form action=\"/action_page.php\" className=\"token-form\">\r\n              <label for=\"token-input\" >\r\n                <div className=\"add-icon-token\">\r\n                  <RiAddLine />\r\n                </div>\r\n              </label>\r\n              <input id=\"token-input\" type=\"file\" onChange={props.getToken} />\r\n            </form>\r\n          </div>\r\n          <div className=\"token-container\">\r\n            {props.tokens[0] ? props.tokens.map((token, index) => (\r\n              <div className=\"token-img\">\r\n                <Droppable id={index + \"droppable\"} >\r\n                  <Draggable id={index + \"token\"} >\r\n                    <div className=\"token-thumbnails\">\r\n                      {(selected === index) ?\r\n                        <img\r\n                          className={className + \" \" + \"token\"}\r\n                          alt=\"...\"\r\n                          id={index + \"token\"}\r\n                          draggable=\"true\" src={token.img.src}\r\n                          onDoubleClick={showOptions}\r\n                          onClick={hideOptions}\r\n                        />\r\n                        :\r\n                        <img\r\n                          className=\"token\"\r\n                          alt=\"...\"\r\n                          id={index + \"token\"}\r\n                          draggable=\"true\" src={token.img.src}\r\n                          onDoubleClick={showOptions}\r\n                          onClick={hideOptions}\r\n                        />\r\n                      }\r\n                      <img className=\"delete-token\" src={Constants.DELETE_ICON} onClick={() => props.deleteToken(token.key)} />\r\n                    </div>\r\n                  </Draggable>\r\n                </Droppable>\r\n              </div>\r\n            ))\r\n              :\r\n              <p>Add a token. Drag and drop the token onto the grid. Scale token to grid by double clicking the token.</p>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TokenDrawer;","import React, { useState } from \"react\";\r\nimport { RiAddLine } from 'react-icons/ri';\r\nimport './index.css';\r\nimport './styles/mode.css';\r\nimport * as Constants from '../../constants';\r\n\r\nfunction MapDrawer(props) {\r\n  const [selected, setSelected] = useState(null);\r\n  const [className, setClassName] = useState(\"selected\");\r\n\r\n  function setFocus(event) {\r\n    setSelected(parseInt(event.target.id[0]));\r\n    props.changeMap(event);\r\n\r\n    if (className === \"selected show-options\")\r\n      setClassName(\"selected\");\r\n  }\r\n\r\n  function showOptions(event) {\r\n    setSelected(parseInt(event.target.id[0]));\r\n\r\n    if (className === \"selected show-options\")\r\n      setClassName(\"selected\");\r\n    else\r\n      setClassName(\"selected show-options\");\r\n  }\r\n\r\n  let drawerState = 'map-drawer';\r\n  if (props.state === \"drawerOpen\") {\r\n    drawerState = 'map-drawer open'\r\n  }\r\n  else {\r\n    drawerState = 'map-drawer';\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode}>\r\n      <div className={drawerState} >\r\n        <div className=\"map-container\">\r\n          <div className=\"upload-form\">\r\n            <form action=\"/action_page.php\" className=\"map-form\">\r\n              <label for=\"map-file-input\" >\r\n                <div className=\"add-icon\">\r\n                  <RiAddLine />\r\n                </div>\r\n              </label>\r\n              <input id=\"map-file-input\" type=\"file\" onChange={props.getMap} />\r\n            </form>\r\n          </div>\r\n          {props.maps[0] ?\r\n            props.maps.map((map, index) => (\r\n              <div className=\"map-thumbnails\">\r\n                {(selected === index) ?\r\n                  <img\r\n                    className={className + \" \" + \"map\"}\r\n                    src={map.img.src}\r\n                    alt=\"...\"\r\n                    id={index + \"m\"}\r\n                    onClick={setFocus}\r\n                    onDoubleClick={showOptions}\r\n                  />\r\n                  :\r\n                  <img\r\n                    className={\"map\"}\r\n                    src={map.img.src}\r\n                    alt=\"...\"\r\n                    id={index + \"map\"}\r\n                    onClick={setFocus}\r\n                    onDoubleClick={showOptions}\r\n                  />\r\n                }\r\n                <img className=\"delete-map\" src={Constants.DELETE_ICON} onClick={() => props.deleteMap(map.key)} />\r\n              </div>\r\n            ))\r\n            :\r\n            <p>Add a map. Switch maps by clicking on the thumbnails.</p>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapDrawer;","import React from 'react';\r\nimport './index.css';\r\n\r\nfunction ToggleMode(props) {\r\n    return (\r\n        <div className={props.mode}>\r\n            <div id=\"mode-container\">\r\n                <label>Dark Mode</label>\r\n                <div>\r\n                    <label class=\"switch\">\r\n                        <input onClick={props.toggleMode} type=\"checkbox\" checked={props.check}/>\r\n                        <span class=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToggleMode;","import React, { useState, useEffect, } from \"react\";\r\nimport Draggable from 'react-draggable';\r\nimport ToggleMode from '../ToggleMode';\r\nimport { MdDragHandle } from 'react-icons/md';\r\n\r\nimport './index.css';\r\nimport './styles/mode.css'\r\n\r\nfunction OptionTray(props) {\r\n\r\n    return (\r\n        <div className={props.mode}>\r\n            <Draggable handle=\".handle\">\r\n                <div className=\"options\">\r\n                    <div>\r\n                        <MdDragHandle className=\"drag-icon handle\" />\r\n                    </div>\r\n                    <div>\r\n                        Grid Size\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"range\" min=\"10\" max=\"100\" class=\"slider\" onInput={props.scaleGrid.bind(this)} />\r\n                    </div>\r\n                    <div>\r\n                        Map Size\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"range\" min=\"10\" max=\"100\" class=\"slider\" onInput={props.scaleMap.bind(this)} />\r\n                    </div>\r\n                    <div>\r\n                        <ToggleMode check={props.mode === \"dark-mode\" ? true : false} toggleMode={props.toggleMode} mode={props.mode} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"logout-button\" onClick={props.handleLogout.bind(this)}><span>Log Out</span></div>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default OptionTray;","import React, { useState, useEffect } from \"react\";\r\nimport ToggleMode from '../ToggleMode';\r\nimport './styles/darkmode.css';\r\nimport './styles/index.css';\r\nimport './styles/lightmode.css';\r\n\r\nfunction OptionTray(props) {\r\n  const [email, setEmail] = useState(undefined);\r\n  const [password, setPassword] = useState(undefined);\r\n  const [mode, setMode] = useState();\r\n\r\n  useEffect(() => {\r\n    setMode(props.mode)\r\n  }, [props.mode]);\r\n\r\n  function validateForm() {\r\n    if (email && password)\r\n      return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  return (\r\n    <div className={mode}>\r\n      <div className=\"login-page\">\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"./styles/lightmode.css\" />\r\n        <div className={\"ribbon ribbon-\" + mode}>\r\n          <div className={\"title title-\" + mode}>\r\n            <h1 className={\"h1-\" + mode}>Battlemaps</h1>\r\n            <p>Virtual Tabletop Toolset</p>\r\n          </div>\r\n          <div className=\"login-form\">\r\n            <form\r\n              onSubmit={(e) => {\r\n                props.handleSubmit(email, password);\r\n                e.preventDefault();\r\n              }}>\r\n              <input\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Email\"\r\n                onChange={e => setEmail(e.target.value)}\r\n              />\r\n              <input\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={e => setPassword(e.target.value)}\r\n                type=\"password\"\r\n              />\r\n              <div>\r\n                <button className=\"login-button lightMode\" disabled={!validateForm()} type=\"submit\" tabIndex=\"3\">\r\n                  <span>\r\n                    Login\r\n              </span>\r\n                </button>\r\n              </div>\r\n\r\n            </form>\r\n            <div className=\"links\">\r\n              <span>Dont have an account?</span>\r\n              <a onClick={props.signUp} tabIndex=\"1\"><span> Sign up here</span></a>\r\n              <span>or</span>\r\n              <a onClick={props.runTest} tabIndex=\"2\"><span>Try without signing up</span></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"login-toggle\" className={props.mode}>\r\n        <ToggleMode check={props.mode === \"dark-mode\" ? true : false} toggleMode={props.toggleMode} mode={props.mode} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionTray;","import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport \"./index.css\";\r\nimport \"./styles/lightmode.css\";\r\nimport \"./styles/darkmode.css\";\r\n\r\nexport default function Signup(props) {\r\n\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false); // Need to find a loading animation or make one\r\n  const [userName, setUserName] = useState(null);\r\n  const [pass, setPass] = useState(null);\r\n  const [passConfirm, setPassConfirm] = useState(null);\r\n  const [code, setCode] = useState(null);\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (pass !== passConfirm) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const newUser = await Auth.signUp({\r\n        username: userName,\r\n        password: pass,\r\n      });\r\n\r\n      setIsLoading(false);\r\n      setNewUser(newUser);\r\n    } catch (e) {\r\n      alert(e.message)\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handleConfirmationSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await Auth.confirmSignUp(userName, code);\r\n      await Auth.signIn(userName, pass);\r\n      props.confirmSignUp();\r\n      props.userHasAuthenticated(true);\r\n    } catch (e) {\r\n      alert(e.message);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <div className=\"signup-page\">\r\n        <div className=\"ribbon confirmation\">\r\n          <form onSubmit={handleConfirmationSubmit}>\r\n            <label>Confirmation Code </label>\r\n            <input\r\n              autoFocus\r\n              type=\"tel\"\r\n              onChange={(event) => setCode(event.target.value)}\r\n            />\r\n            <button>Submit</button>\r\n            <h1>Please check your email for the code.</h1>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderForm() {\r\n    return (\r\n      <div className=\"signup-page\">\r\n        <div className=\"ribbon\">\r\n          <div className=\"signup-card\">\r\n            <form onSubmit={handleSubmit} className=\"signup-form\">\r\n              <label>Email</label>\r\n              <input\r\n                autoFocus\r\n                type=\"email\"\r\n                onChange={(event) => setUserName(event.target.value)}\r\n              />\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={(event) => setPass(event.target.value)}\r\n              />\r\n              <label>Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={(event) => setPassConfirm(event.target.value)}\r\n              />\r\n              <div>\r\n                <button type=\"button\" onClick={props.confirmSignUp}>Back</button>\r\n                <span> </span>\r\n                <button type=\"submit\">Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={props.mode}>\r\n      {newUser === null ? renderForm() : renderConfirmationForm()}\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Droppable from \"../Droppable\";\r\nimport { fabric } from \"fabric\";\r\nimport { MdFilterCenterFocus } from 'react-icons/md';\r\nimport './index.css';\r\nimport * as Constants from \"../../constants\";\r\n\r\n\r\nfunction Canvas(props) {\r\n    const [canvas, setCanvas] = useState(null);\r\n    const [oldMap, setOldMap] = useState(null);\r\n    const [oldMapScale, setOldMapScale] = useState(null);\r\n    const [oldGridScale, setOldGridScale] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        onLoad();\r\n\r\n        window.addEventListener('contextmenu', function (e) {\r\n            // do something here... \r\n            e.preventDefault();\r\n        }, false);\r\n\r\n    }, [props.currentMap, props.gridScale, props.mapScale, props.mode]);\r\n\r\n    // Canvas initialization\r\n    function onLoad() {\r\n\r\n\r\n        if (!canvas) {\r\n            let newCanvas = new fabric.Canvas('canvas', {\r\n                selection: false,\r\n                // height: height,\r\n                // width: width,\r\n                fireRightClick: true,\r\n                //fireMiddleClick: true, \r\n            });\r\n\r\n            if (props.mode === \"dark-mode\")\r\n                newCanvas.backgroundColor = \"#525959\";\r\n\r\n            setCanvas(newCanvas);\r\n            setSnap(newCanvas, props.gridScale)\r\n            drawGrid(newCanvas, props.gridScale);\r\n            drawBackground(props.currentMap);\r\n            setDelete();\r\n\r\n            setOldGridScale(props.gridScale);\r\n            setOldMapScale(props.mapScale);\r\n            setOldMap(props.currentMap);\r\n        } else {\r\n            if (props.mode === \"dark-mode\") {\r\n                canvas.backgroundColor = \"#525959\";\r\n                canvas.renderAll()\r\n            }\r\n            else {\r\n                canvas.backgroundColor = \"white\";\r\n                canvas.renderAll()\r\n            }\r\n\r\n            if (props.gridScale !== oldGridScale) {\r\n                setSnap(canvas, props.gridScale)\r\n                drawGrid(canvas, props.gridScale);\r\n                setOldGridScale(props.gridScale);\r\n            }\r\n            if (props.currentMap !== oldMap | props.mapScale !== oldMapScale) {\r\n                drawBackground(props.currentMap);\r\n                setOldMap(props.currentMap);\r\n                setOldMapScale(props.mapScale)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Renders token to canvas at set coordinates\r\n    function drawToken(tokenImage, x, y) {\r\n\r\n        fabric.Image.fromURL(tokenImage.src, function (img) {\r\n            let background = img.set({ left: x, top: y });\r\n            background.scaleToWidth(props.gridScale);\r\n            background.scaleToHeight(props.gridScale);\r\n            canvas.add(background)\r\n        });\r\n\r\n    }\r\n\r\n    // Renders grid lines to canvas\r\n    function drawGrid(canvas, scale) {\r\n        let width = document.body.clientWidth;\r\n        let height = document.body.clientHeight;\r\n\r\n        let objects = canvas.getObjects('line');\r\n        for (let i in objects) {\r\n            canvas.remove(objects[i]);\r\n        }\r\n\r\n        for (let i = 0; i < (height / scale); i++) {\r\n            canvas.add(new fabric.Line([0, i * scale, width, i * scale], { stroke: \"grey\", selectable: false }));\r\n        }\r\n        for (let i = 0; i < (width / scale); i++) {\r\n            canvas.add(new fabric.Line([i * scale, 0, i * scale, height], { stroke: \"grey\", selectable: false }));\r\n        }\r\n    }\r\n\r\n\r\n    // Renders background to canvas\r\n    function drawBackground(image) {\r\n        if (!image)\r\n            return;\r\n\r\n        let scale = props.mapScale;\r\n        let width = document.body.clientWidth;\r\n        let height = document.body.clientHeight;\r\n\r\n        if (image) {\r\n            let left = (width / 2) - ((image.width / 2) * scale);\r\n            let top = (height / 2) - ((image.height / 2) * scale);\r\n\r\n            fabric.Image.fromURL(image.src, function (img) {\r\n                let background = img.set({ left: left, top: top, selectable: false }).scale(scale);\r\n                canvas.setBackgroundImage(background);\r\n                canvas.renderAll();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // Sets the grid snap points for tokens\r\n    function setSnap(canvas, scale) {\r\n\r\n        // Clears canvas events so events don't stack on rerender\r\n        canvas.off()\r\n\r\n        canvas.on('object:moving', function (eventions) {\r\n            eventions.target.left = Math.round(eventions.target.left / scale) * scale;\r\n            eventions.target.top = Math.round(eventions.target.top / scale) * scale;\r\n            eventions.target.setCoords();\r\n        })\r\n\r\n        canvas.on('mouse:dblclick', function (eventions) {\r\n            const active = canvas.getActiveObject()\r\n            if (!active)\r\n                return;\r\n\r\n            active.scaleToWidth(scale);\r\n            active.scaleToHeight(scale);\r\n            canvas.renderAll();\r\n        })\r\n\r\n        canvas.on('mouse:down', function (event) {\r\n\r\n            let evt = event.e;\r\n            if (evt.altKey === true) {\r\n                this.isDragging = true;\r\n                this.selection = false;\r\n                this.lastPosX = evt.clientX;\r\n                this.lastPosY = evt.clientY;\r\n            }\r\n\r\n            if (event.button !== 3)\r\n                return;\r\n\r\n            let e = event.e;\r\n            this.isDragging = true;\r\n            this.selection = false;\r\n            this.lastPosX = e.clientX;\r\n            this.lastPosY = e.clientY;\r\n        });\r\n\r\n        canvas.on('mouse:move', function (event) {\r\n            if (this.isDragging) {\r\n                let e = event.e;\r\n                let vpt = this.viewportTransform;\r\n                vpt[4] += e.clientX - this.lastPosX;\r\n                vpt[5] += e.clientY - this.lastPosY;\r\n                this.requestRenderAll();\r\n                this.lastPosX = e.clientX;\r\n                this.lastPosY = e.clientY;\r\n            }\r\n        });\r\n        canvas.on('mouse:up', function (event) {\r\n            if (this.isDragging) {\r\n                // on mouse up we want to recalculate new interaction\r\n                // for all objects, so we call setViewportTransform\r\n                this.setViewportTransform(this.viewportTransform);\r\n                this.isDragging = false;\r\n                this.selection = true;\r\n                document.getElementById(\"center\").style.display = \"block\";\r\n            }\r\n        });\r\n\r\n        // zooms in and out of canvas\r\n        canvas.on('mouse:wheel', function (event) {\r\n            let delta = event.e.deltaY;\r\n            let zoom = canvas.getZoom();\r\n            zoom *= 0.999 ** delta;\r\n            if (zoom > 20) zoom = 20;\r\n            if (zoom < 0.01) zoom = 0.01;\r\n            canvas.zoomToPoint({ x: event.e.offsetX, y: event.e.offsetY }, zoom);\r\n            event.e.preventDefault();\r\n            event.e.stopPropagation();\r\n            document.getElementById(\"center\").style.display = \"block\";\r\n        });\r\n    }\r\n\r\n    function recenterCanvas() {\r\n\r\n        let zoom = canvas.getZoom();\r\n        let width = document.body.clientWidth;\r\n        let height = document.body.clientHeight;\r\n        let x = (height / 2) - ((canvas.getHeight() / 2) * zoom);\r\n        let y = (width / 2) - ((canvas.getWidth() / 2) * zoom);\r\n        canvas.viewportTransform[4] = y;\r\n        canvas.viewportTransform[5] = x;\r\n        canvas.requestRenderAll();\r\n        canvas.lastPosX = x;\r\n        canvas.lastPosY = y;\r\n        document.getElementById(\"center\").style.display = \"none\";\r\n    }\r\n\r\n    // Renders the delete icon from svg source.\r\n    function renderIcon() {\r\n        let deleteIcon = Constants.DELETE_ICON;\r\n\r\n        let deleteImg = document.createElement('img');\r\n        deleteImg.src = deleteIcon;\r\n\r\n\r\n        return function renderIcon(ctx, left, top, styleOverride, fabricObject) {\r\n            let size = this.cornerSize;\r\n            ctx.save();\r\n            ctx.translate(left, top);\r\n            ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle));\r\n            ctx.drawImage(deleteImg, -size / 2, -size / 2, size, size);\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    // Places the delete icon to the corner of each token.\r\n    function setDelete() {\r\n        fabric.Object.prototype.controls.deleteControl = new fabric.Control({\r\n            x: 0.5,\r\n            y: -0.5,\r\n            offsetY: -16,\r\n            offsetX: 16,\r\n            cursorStyle: 'pointer',\r\n            mouseUpHandler: deleteObject,\r\n            render: renderIcon(),\r\n            cornerSize: 24\r\n        });\r\n    }\r\n\r\n    // Onclick handler for delete icon. Removes selected object.\r\n    function deleteObject(eventData, target) {\r\n        let canvas = target.canvas;\r\n        canvas.remove(target);\r\n        canvas.requestRenderAll();\r\n    }\r\n\r\n\r\n    // Droppable functions\r\n\r\n    function drop(event) {\r\n        event.preventDefault();\r\n        const data = event.dataTransfer.getData('transfer');\r\n\r\n        let tokenImage = new Image();\r\n        tokenImage.src = data;\r\n\r\n        let x = event.clientX;\r\n        let y = event.clientY;\r\n        let tokenInfo = {\r\n            src: tokenImage,\r\n            x: x,\r\n            y: y,\r\n        }\r\n        drawToken(tokenImage, x, y);\r\n    }\r\n\r\n    function allowDrop(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Droppable drop={drop} allowDrop={allowDrop}>\r\n            <div id=\"center\" onClick={recenterCanvas}><MdFilterCenterFocus /></div>\r\n            <canvas id=\"canvas\" width={document.body.clientWidth} height={document.body.clientHeight} />\r\n        </Droppable>\r\n    );\r\n}\r\n\r\nexport default Canvas;","import { Storage } from \"aws-amplify\";\r\n\r\nasync function s3Upload(file, type, tag) {\r\n  const filename = `${Date.now()}${tag}`;\r\n\r\n  const stored = await Storage.vault.put(filename, file, {\r\n    contentType: type,\r\n  });\r\n\r\n  return stored.key;\r\n}\r\n\r\nexport default s3Upload;","import { Storage } from \"aws-amplify\";\r\n\r\nasync function s3Get(key) {\r\n  const stored = await Storage.vault.get(key);\r\n\r\n  return stored;\r\n}\r\n\r\nexport default s3Get;","import { API } from \"aws-amplify\";\r\n\r\nexport default function postFiles(boardState) {\r\n    return API.post(\"gameboard\", \"/gameboard\", {\r\n      body: boardState\r\n    });\r\n}","import { API } from \"aws-amplify\";\r\n\r\nexport default async function getFiles(){\r\n    return API.get(\"gameboard\", `/gameboard`);\r\n}","import { API } from \"aws-amplify\";\r\n\r\nexport default function updateFile(boardState, id) {\r\n    return API.put(\"gameboard\", `/gameboard/${id}`, {\r\n      body: boardState\r\n    });\r\n}","import { Storage } from \"aws-amplify\";\r\nimport { API } from \"aws-amplify\";\r\nimport updateFile from './updateFile';\r\n\r\nexport default async function deleteFiles(id, boardState, key) {\r\n    const stored = {\r\n        db: null,\r\n        s3: null\r\n    }\r\n\r\n    stored.db = await updateFile(boardState, id);\r\n    stored.s3 = await Storage.vault.remove(key);\r\n    return stored;\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport EditTray from './Components/EditTray';\r\nimport TokenDrawer from './Components/TokenDrawer';\r\nimport MapDrawer from './Components/MapDrawer';\r\nimport OptionTray from './Components/OptionTray';\r\nimport Login from \"./Components/Login\";\r\nimport Signup from \"./Components/Signup\";\r\nimport Canvas from \"./Components/Canvas\";\r\nimport s3Upload from \"./libs/s3Bucket\";\r\nimport s3Get from './libs/s3Get';\r\nimport postFiles from './libs/postFiles';\r\nimport getFiles from './libs/getFiles';\r\nimport updateFile from './libs/updateFile';\r\nimport deleteFiles from './libs/deleteFiles';\r\nimport './App.css';\r\nimport * as Constants from './constants';\r\n\r\nimport testToken1 from './Data/tokens/dax.jpg';\r\nimport testToken2 from './Data/tokens/pop.jpg';\r\n\r\nfunction App(props) {\r\n  // List of game states\r\n  const [gameList, setGameList] = useState(null);\r\n\r\n  // Current game state\r\n  const [gameState, SetGameState] = useState({ gameId: null, mapKeys: [], tokenKeys: [] });\r\n\r\n  // User interface variables\r\n  const [mode, setMode] = useState(defaultMode(localStorage.getItem('mode')));\r\n  const [TokenDrawerState, setTokenDrawerState] = useState(\"drawerClosed\");\r\n  const [MapDrawerState, setMapDrawerState] = useState(\"drawerClosed\");\r\n  const [optionTray, setOptionTray] = useState(false);\r\n\r\n  // Canvas state variables\r\n  const [mapList, setMapList] = useState([]);\r\n  const [tokenList, setTokenList] = useState([]);\r\n  const [currentMap, setCurrentMap] = useState(null);\r\n  const [mapScale, setMapScale] = useState(1);\r\n  const [gridScale, setGridScale] = useState(50);\r\n\r\n  // User authentication variables\r\n  const [signingUp, setSigningUp] = useState(false);\r\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\r\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n  const [isTest, setIsTest] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkForUser();\r\n    loadDB();\r\n\r\n    if (isTest)\r\n      prepareTest();\r\n\r\n  }, [isAuthenticated]);\r\n\r\n  function defaultMode(stored) {\r\n    if (stored === null)\r\n      return \"light-mode\"\r\n    else return stored;\r\n  }\r\n\r\n  function prepareTest() {\r\n\r\n\r\n    let img = new Image();\r\n    let img2 = new Image();\r\n    let array = new Array();\r\n\r\n    img.src = testToken1;\r\n    img2.src = testToken2;\r\n\r\n    let newToken = {\r\n      img: img,\r\n      key: \"testToken1\"\r\n    }\r\n\r\n    let newToken2 = {\r\n      img: img2,\r\n      key: \"testToken2\"\r\n    }\r\n\r\n    array.push(newToken);\r\n    array.push(newToken2);\r\n\r\n    setTokenList(array);\r\n  }\r\n\r\n  // State object function. Returns an object with the correct attributes to match schema for backend.\r\n  function boardState(maps, tokens) {\r\n    const state = {\r\n      content: {\r\n        maps: maps,\r\n        tokens: tokens\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n\r\n  // Backend file upload functions\r\n\r\n  async function loadDB() {\r\n    if (!isAuthenticated || isTest)\r\n      return;\r\n    try {\r\n      // getFiles is a lib function that queries backend for content\r\n      const games = await getFiles();\r\n\r\n      if (games[0]) {\r\n        // Stores information\r\n        setGameList(games);\r\n\r\n        // parses out that information into state\r\n        gameState.gameId = games[0].gameid;\r\n        gameState.mapKeys = games[0].content.maps;\r\n        gameState.tokenKeys = games[0].content.tokens\r\n\r\n        // Fetches assets from backend and populates local data structures\r\n        for (let i = 0; i < gameState.mapKeys.length; ++i) {\r\n          let file = await s3Get(gameState.mapKeys[i]);\r\n          let img = new Image();\r\n          img.src = file;\r\n\r\n          let newMap = {\r\n            img: img,\r\n            key: gameState.mapKeys[i]\r\n          }\r\n\r\n          setMapList(mapList => [...mapList, newMap]);\r\n        }\r\n\r\n        for (let i = 0; i < gameState.tokenKeys.length; ++i) {\r\n          let file = await s3Get(gameState.tokenKeys[i]);\r\n          let img = new Image();\r\n          img.src = file;\r\n\r\n          let newToken = {\r\n            img: img,\r\n            key: gameState.tokenKeys[i]\r\n          }\r\n\r\n          setTokenList(tokenList => [...tokenList, newToken]);\r\n        }\r\n      }\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  async function deleteMap(key) {\r\n\r\n    if (isTest) {\r\n      let newList = new Array();\r\n      for (let i = 0; i < mapList.length; i++) {\r\n        if (mapList[i].key !== key) {\r\n          newList.push(mapList[i]);\r\n        }\r\n      }\r\n      setMapList(newList);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let index = gameState.mapKeys.indexOf(key);\r\n      if (index > -1) {\r\n        gameState.mapKeys.splice(index, 1);\r\n\r\n        // Array needs to be copied so when setMapList is called, the app rerenders.\r\n        let newList = [...mapList];\r\n        newList.splice(index, 1);\r\n        setMapList(newList);\r\n      }\r\n\r\n      const newState = boardState(gameState.mapKeys, gameState.tokenKeys);\r\n      await deleteFiles(gameState.gameId, newState, key);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  async function deleteToken(key) {\r\n\r\n    // If not logged in, delete works locally only.\r\n    if (isTest) {\r\n      let newList = new Array();\r\n      for (let i = 0; i < tokenList.length; i++) {\r\n        if (tokenList[i].key !== key) {\r\n          newList.push(tokenList[i]);\r\n        }\r\n      }\r\n      setTokenList(newList);\r\n      return;\r\n    }\r\n\r\n    // If logged in, delete needs update DB\r\n    try {\r\n      let index = gameState.tokenKeys.indexOf(key);\r\n      if (index > -1) {\r\n        gameState.tokenKeys.splice(index, 1);\r\n\r\n        // Array needs to be copied so when setMapList is called, the app rerenders.\r\n        let newList = [...tokenList];\r\n        newList.splice(index, 1);\r\n        setTokenList(newList);\r\n      }\r\n\r\n      const newState = boardState(gameState.mapKeys, gameState.tokenKeys);\r\n      await deleteFiles(gameState.gameId, newState, key);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n\r\n  // User authentication functions\r\n\r\n  async function loginHandler(email, password) {\r\n\r\n    try {\r\n      await Auth.signIn(email, password);\r\n      authenticateLogin();\r\n    } catch (e) {\r\n      alert(\"Login error:\" + e.message);\r\n    }\r\n  }\r\n\r\n  async function checkForUser() {\r\n    try {\r\n      await Auth.currentSession();\r\n      authenticateLogin();\r\n    }\r\n    catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  async function handleLogout() {\r\n    await Auth.signOut();\r\n\r\n    userHasAuthenticated(false);\r\n    setTokenList([]);\r\n    setMapList([]);\r\n    setCurrentMap(null);\r\n    setGridScale(50);\r\n    setMapScale(1);\r\n    setIsTest(false);\r\n    closeAll();\r\n  }\r\n\r\n  function signUp() {\r\n    setSigningUp(true);\r\n  }\r\n\r\n  function confirmSignUp() {\r\n    setSigningUp(false);\r\n  }\r\n\r\n  function authenticateLogin() {\r\n    userHasAuthenticated(true);\r\n  }\r\n\r\n  function runTest() {\r\n    userHasAuthenticated(true);\r\n    setIsTest(true);\r\n  }\r\n\r\n  // User interface functions\r\n  function toggleOptionTray() {\r\n    setOptionTray(!optionTray);\r\n  }\r\n\r\n  function closeAll() {\r\n    setOptionTray(false);\r\n    setTokenDrawerState(\"drawerClosed\");\r\n    setMapDrawerState(\"drawerClosed\");\r\n  }\r\n\r\n  function toggleModeHandler() {\r\n    if (mode === \"light-mode\") {\r\n      setMode(\"dark-mode\")\r\n      localStorage.setItem('mode', 'dark-mode');\r\n    } else {\r\n      setMode(\"light-mode\")\r\n      localStorage.setItem('mode', 'light-mode');\r\n    }\r\n\r\n  }\r\n\r\n  function toggleTokenTray() {\r\n\r\n    if (MapDrawerState === \"drawerOpen\")\r\n      toggleMaps();\r\n\r\n    if (TokenDrawerState === \"drawerClosed\")\r\n      setTokenDrawerState(\"drawerDocked\")\r\n    else\r\n      setTokenDrawerState(\"drawerClosed\")\r\n  }\r\n\r\n  function toggleMaps() {\r\n\r\n    if (TokenDrawerState === \"drawerDocked\")\r\n      toggleTokenTray();\r\n\r\n    if (MapDrawerState === \"drawerClosed\")\r\n      setMapDrawerState(\"drawerOpen\")\r\n    else\r\n      setMapDrawerState(\"drawerClosed\")\r\n  }\r\n\r\n\r\n  // Canvas variable functions\r\n  function changeMap(event) {\r\n    let newMap = mapList[event.target.id[0]]\r\n    setCurrentMap(newMap.img);\r\n  }\r\n\r\n  function scaleMap(event) {\r\n    let scale = event.target.value / 50;\r\n    setMapScale(scale);\r\n  }\r\n\r\n  function scaleGrid(event) {\r\n    let scale = parseInt(event.target.value);\r\n    setGridScale(scale);\r\n  }\r\n\r\n\r\n  // Fetch file from user functions\r\n  async function uploadBackground(event) {\r\n\r\n    let reader = new FileReader();\r\n\r\n    const imageFiles = event.target.files;\r\n    let file = imageFiles[0];\r\n\r\n    // checkMapSize fails if file is too large \r\n    if (!checkMapSize(file))\r\n      return;\r\n\r\n    if (mapList.length > 4) {\r\n      alert(\"You cannot have more than 5 maps uploaded during this stage of development.\");\r\n      return;\r\n    }\r\n\r\n\r\n    let fileKey;\r\n    let gameId;\r\n\r\n    if (!gameList && !isTest) {\r\n      try {\r\n        fileKey = await s3Upload(file, file.type, \"map\");\r\n        gameId = await postFiles(boardState(gameState.mapKeys, gameState.tokenKeys));\r\n        gameState.gameId = gameId.gameid;\r\n        gameState.mapKeys = [fileKey]\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      if (!isTest) {\r\n        try {\r\n          fileKey = await s3Upload(file, file.type, \"map\");\r\n          let list = gameState.mapKeys;\r\n          gameState.mapKeys = [...list, fileKey];\r\n          await updateFile(boardState(gameState.mapKeys, gameState.tokenKeys), gameState.gameId);\r\n        } catch (e) {\r\n          alert(e);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    // This should only happen when isTesting is true\r\n    if (fileKey === undefined) {\r\n      let date = new Date();\r\n      fileKey = date.getTime();\r\n    }\r\n\r\n    reader.onload = () => {\r\n      let img = new Image();\r\n      img.src = reader.result;\r\n\r\n      let newMap = {\r\n        img: img,\r\n        key: fileKey\r\n      }\r\n\r\n      setMapList(mapList => [...mapList, newMap]);\r\n    }\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  async function uploadTokenHandler(event) {\r\n\r\n    const imageFiles = event.target.files;\r\n\r\n    let reader = new FileReader();\r\n    let file = imageFiles[0];\r\n\r\n    // checkTokenSize fails if file is too large \r\n    if (!checkTokenSize(file))\r\n      return;\r\n\r\n    if (tokenList.length > 9) {\r\n      alert(\"You cannot have more than 10 tokens uploaded during this stage of development.\");\r\n      return;\r\n    }\r\n\r\n    let fileKey;\r\n    let gameId;\r\n\r\n    if (!gameList && !isTest) {\r\n      try {\r\n        fileKey = await s3Upload(file, file.type, \"token\");\r\n        gameId = await postFiles(boardState(gameState.mapKeys, gameState.tokenKeys));\r\n        gameState.gameId = gameId.gameid;\r\n        gameState.tokenKeys = [fileKey]\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      if (!isTest) {\r\n        try {\r\n          fileKey = await s3Upload(file, file.type, \"token\");\r\n          let list = gameState.tokenKeys;\r\n          gameState.tokenKeys = [...list, fileKey];\r\n          await updateFile(boardState(gameState.mapKeys, gameState.tokenKeys), gameState.gameId);\r\n        } catch (e) {\r\n          alert(e);\r\n        }\r\n      }\r\n    }\r\n\r\n    // This should only happen when isTesting is true\r\n    if (fileKey === undefined) {\r\n      let date = new Date();\r\n      fileKey = date.getTime();\r\n    }\r\n\r\n    reader.onload = () => {\r\n      let img = new Image();\r\n      img.src = reader.result;\r\n      let newToken = {\r\n        img: img,\r\n        key: fileKey\r\n      }\r\n      setTokenList(tokenList => [...tokenList, newToken]);\r\n    }\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  function checkMapSize(file) {\r\n    if (file && file.size > Constants.MAX_MAP_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${Constants.MAX_MAP_SIZE / 1000000\r\n        } MB.`\r\n      );\r\n      return 0;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  function checkTokenSize(file) {\r\n    if (file && file.size > Constants.MAX_TOKEN_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${Constants.MAX_TOKEN_SIZE / 8000\r\n        } kb.`\r\n      );\r\n      return 0;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {signingUp && <Signup mode={mode} userHasAuthenticated={userHasAuthenticated} confirmSignUp={confirmSignUp} />}\r\n      {!isAuthenticated ?\r\n        <Login\r\n          mode={mode}\r\n          toggleMode={toggleModeHandler}\r\n          runTest={runTest}\r\n          authenticateLogin={authenticateLogin}\r\n          signUp={signUp} confirmSignUp={confirmSignUp}\r\n          handleSubmit={loginHandler}\r\n        />\r\n        :\r\n        <Canvas\r\n          mode={mode}\r\n          gridScale={gridScale}\r\n          currentMap={currentMap}\r\n          mapScale={mapScale}\r\n        />\r\n      }\r\n\r\n      {optionTray &&\r\n        <OptionTray\r\n          mode={mode}\r\n          scaleGrid={scaleGrid}\r\n          scaleMap={scaleMap}\r\n          handleLogout={handleLogout}\r\n          toggleMode={toggleModeHandler}\r\n        />}\r\n      <EditTray\r\n        mode={mode}\r\n        toggleTokens={toggleTokenTray}\r\n        toggleMaps={toggleMaps}\r\n        toggleOptions={toggleOptionTray}\r\n        close={closeAll} />\r\n      <TokenDrawer\r\n        mode={mode}\r\n        state={TokenDrawerState}\r\n        getToken={uploadTokenHandler}\r\n        tokens={tokenList}\r\n        deleteToken={deleteToken}\r\n      />\r\n      <MapDrawer\r\n        mode={mode}\r\n        state={MapDrawerState}\r\n        getMap={uploadBackground}\r\n        maps={mapList} changeMap={changeMap}\r\n        deleteMap={deleteMap}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Amplify } from 'aws-amplify';\r\nimport config from './config';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    mandatorySignIn: true,\r\n    region: config.cognito.REGION,\r\n    userPoolId: config.cognito.USER_POOL_ID,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\r\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\r\n  },\r\n  Storage: {\r\n    region: config.s3.REGION,\r\n    bucket: config.s3.BUCKET,\r\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\r\n  },\r\n  API: {\r\n    endpoints: [\r\n      {\r\n        name: \"gameboard\",\r\n        endpoint: config.apiGateway.URL,\r\n        region: config.apiGateway.REGION\r\n      },\r\n    ]\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}