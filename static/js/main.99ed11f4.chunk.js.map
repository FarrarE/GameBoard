{"version":3,"sources":["Components/EditTray/index.js","Components/Draggable/index.js","Components/Droppable/index.js","Components/TokenDrawer/index.js","Components/MapDrawer/index.js","Components/OptionTray/index.js","App.js","serviceWorker.js","index.js"],"names":["EditBar","props","className","onClick","toggleTokens","toggleMaps","close","toggleOptions","Draggable","drag","event","dataTransfer","setData","target","src","noAllowDrop","stopPropagation","id","this","draggable","onDragStart","onDragOver","children","React","Component","Droppable","onDrop","drop","allowDrop","TokenDrawer","drawerState","state","action","for","type","onChange","getToken","tokens","map","token","index","alt","width","height","MapDrawer","getMap","maps","changeMap","OptionTray","min","max","class","onInput","scaleGrid","bind","App","useState","TokenDrawerState","setTokenDrawerState","MapDrawerState","setMapDrawerState","optionTray","setOptionTray","gridScale","setGridScale","mapList","setMapList","tokenList","setTokenList","currentMap","setCurrentMap","setCurrentTokens","canvas","setCanvas","setSnap","scale","on","options","console","log","left","Math","round","top","setCoords","drawGrid","document","body","clientWidth","clientHeight","i","add","fabric","Line","stroke","selectable","drawBackground","image","Image","fromURL","img","oImg","set","setBackgroundImage","renderAll","useEffect","c","Canvas","selection","parseInt","value","objects","getObjects","remove","off","imageFiles","files","filesLength","length","reader","FileReader","file","onloadend","base_image","result","readAsDataURL","onload","newMap","preventDefault","data","getData","tokenImage","x","clientX","y","clientY","tokenInfo","currentTokens","drawToken","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.99ed11f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MdLayers } from 'react-icons/md';\r\nimport { FaPaintBrush } from 'react-icons/fa';\r\nimport { FaDrawPolygon} from 'react-icons/fa';\r\nimport { FiMove } from 'react-icons/fi';\r\nimport { GiSelect } from 'react-icons/gi';\r\nimport { TiContacts } from 'react-icons/ti';\r\nimport { RiTreasureMapLine } from 'react-icons/ri';\r\nimport { BiCog } from 'react-icons/bi';\r\nimport { CgMinimizeAlt } from 'react-icons/cg';\r\nimport { CgColorBucket } from 'react-icons/cg';\r\nimport './index.css';\r\n\r\nfunction EditBar(props) {\r\n  return (\r\n    <div className=\"tray\"> \r\n        {/* <div className=\"edit-icon\">\r\n            <MdLayers />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <FaPaintBrush />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <CgColorBucket />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <FaDrawPolygon />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <GiSelect />\r\n        </div>\r\n        <div className=\"edit-icon\"> \r\n            <FiMove />\r\n        </div>\r\n\r\n        <div className=\"edit-bar\">\r\n\r\n        </div> */}\r\n\r\n        <div className=\"edit-icon\">\r\n            <TiContacts onClick={props.toggleTokens} />\r\n        </div>\r\n\r\n        <div className=\"edit-icon\">\r\n            <RiTreasureMapLine  onClick={props.toggleMaps} />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <CgMinimizeAlt onClick={props.close} />\r\n        </div>\r\n        <div className=\"edit-icon\">\r\n            <BiCog onClick={props.toggleOptions} />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Draggable extends React.Component{\r\n    drag = (event) =>{\r\n        event.dataTransfer.setData('transfer', event.target.src);\r\n    }\r\n\r\n    noAllowDrop = (event) =>{\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.id} draggable=\"true\" onDragStart={this.drag} onDragOver={this.noAllowDrop} >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Droppable extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.id} onDrop={this.props.drop} onDragOver={this.props.allowDrop}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDroppable.propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node\r\n}","import React from \"react\";\r\nimport { BsPlusSquare } from 'react-icons/bs';\r\nimport Draggable from \"../Draggable\";\r\nimport Droppable from \"../Droppable\";\r\nimport './index.css';\r\n\r\nfunction TokenDrawer(props) {\r\n\r\n    let drawerState = 'token-drawer';\r\n    if(props.state === \"drawerDocked\"){\r\n        drawerState = 'token-drawer docked'\r\n    }\r\n    else {\r\n        drawerState = 'token-drawer';\r\n    }\r\n\r\n  return (\r\n    <div className={drawerState} > \r\n      <form action=\"/action_page.php\" className=\"token-form\">\r\n        <label for=\"token-input\" >\r\n          <div className=\"add-icon\">\r\n          <BsPlusSquare  />\r\n          </div>\r\n        </label>\r\n        <input id=\"token-input\" type=\"file\" onChange={props.getToken}/>\r\n      </form>\r\n      Add a token and drop it onto the board.\r\n      <div className=\"token-container\">\r\n        {props.tokens[0] && props.tokens.map((token, index) =>(\r\n          <Droppable id={index+\"droppable\"} >\r\n            <Draggable id={index +\"token\"}  >\r\n              <img \r\n                alt=\"...\"\r\n                draggable=\"true\" src={token.src} \r\n                width=\"100\" height=\"100\" \r\n              />\r\n            </Draggable>\r\n          </Droppable>\r\n        ))} \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TokenDrawer;","import React from \"react\";\r\nimport { BsPlusSquare } from 'react-icons/bs';\r\nimport './index.css';\r\n\r\nfunction MapDrawer(props) {\r\n\r\n  \r\n\r\n\r\n    let drawerState = 'map-drawer';\r\n    if(props.state === \"drawerOpen\"){\r\n        drawerState = 'map-drawer open'\r\n    }\r\n    else {\r\n        drawerState = 'map-drawer';\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className={drawerState} > \r\n      <form action=\"/action_page.php\" className=\"map-form\">\r\n        <label for=\"file-input\" >\r\n          <div className=\"add-icon\">\r\n            <BsPlusSquare  />\r\n          </div>\r\n        </label>\r\n        <input id=\"file-input\" type=\"file\" onChange={props.getMap}/>\r\n      </form>\r\n      Add a map. Switch maps by clicking on the thumbnails.\r\n      <div className=\"map-container\">\r\n        {props.maps[0] && props.maps.map((map, index) =>(<img src={map.src} alt=\"...\" id={index +\"map\"} width=\"100\" height=\"50\" onClick={props.changeMap} />))} \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapDrawer;","import React from \"react\";\r\nimport { BsToggleOff } from 'react-icons/bs';\r\n\r\nimport './index.css';\r\n\r\nfunction OptionTray(props)  {\r\n\r\n  return (\r\n    <div className=\"options\"> \r\n        <div>\r\n            Grid Size\r\n        </div>\r\n        <div>\r\n            <input type=\"range\" min=\"10\" max=\"100\" class=\"slider\" onInput={props.scaleGrid.bind(this)}/>\r\n        </div>\r\n        {/* <div>\r\n            Mode\r\n        </div>\r\n        <div>\r\n            <BsToggleOff />\r\n        </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionTray;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport './App.css';\r\nimport { fabric } from \"fabric\";\r\nimport EditTray from './Components/EditTray';\r\nimport TokenDrawer from './Components/TokenDrawer';\r\nimport MapDrawer from './Components/MapDrawer';\r\nimport OptionTray from './Components/OptionTray';\r\nimport Droppable from \"./Components/Droppable\";\r\n\r\nfunction App(props) {\r\n  const [TokenDrawerState, setTokenDrawerState] = useState(\"drawerClosed\");\r\n  const [MapDrawerState, setMapDrawerState] = useState(\"drawerClosed\");\r\n  const [optionTray, setOptionTray] = useState(false);\r\n  const [gridScale, setGridScale] = useState(50);\r\n  const [mapList, setMapList] = useState([]);\r\n  const [tokenList, setTokenList] = useState([]);\r\n  const [currentMap, setCurrentMap] = useState(null);\r\n  const [currentTokens, setCurrentTokens] = useState([]);\r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    \r\n    // Initialize grid on canvas\r\n    let c = new fabric.Canvas('c', { selection: false });\r\n    setSnap(c, gridScale)\r\n    setCanvas(c, gridScale);\r\n    drawGrid(c, gridScale);\r\n  },[]);\r\n\r\n  function setSnap(canvas, scale){\r\n    canvas.on('object:moving', function(options) { \r\n      console.log(scale)\r\n      options.target.left = Math.round(options.target.left / scale) * scale;\r\n      options.target.top = Math.round(options.target.top / scale) * scale\r\n      options.target.setCoords();\r\n    })\r\n  }\r\n\r\n  function toggleOptionTray(){\r\n    setOptionTray(!optionTray);\r\n  }\r\n\r\n  function closeAll(){\r\n    setOptionTray(false);\r\n    setTokenDrawerState(\"drawerClosed\");\r\n    setMapDrawerState(\"drawerClosed\");\r\n  }\r\n\r\n  function toggleTokens(){\r\n\r\n    if(MapDrawerState === \"drawerOpen\")\r\n      toggleMaps();\r\n\r\n    if(TokenDrawerState === \"drawerClosed\")\r\n      setTokenDrawerState(\"drawerDocked\")\r\n    else \r\n      setTokenDrawerState(\"drawerClosed\")\r\n  }\r\n\r\n  function toggleMaps(){\r\n\r\n    if(TokenDrawerState === \"drawerDocked\")\r\n      toggleTokens();\r\n\r\n    if(MapDrawerState === \"drawerClosed\")\r\n      setMapDrawerState(\"drawerOpen\")\r\n    else \r\n      setMapDrawerState(\"drawerClosed\")\r\n\r\n  }\r\n\r\n  function scaleGrid(event){\r\n\r\n    let scale = parseInt(event.target.value);\r\n\r\n    let objects = canvas.getObjects('line');\r\n    \r\n    for (let i in objects) {\r\n        canvas.remove(objects[i]);\r\n    }\r\n    canvas.off()\r\n    setSnap(canvas, scale);\r\n    setGridScale(scale);\r\n    drawBackground(currentMap);\r\n    drawGrid(canvas, scale);\r\n  }\r\n\r\n  function drawGrid(canvas, scale){\r\n    let width = document.body.clientWidth;\r\n    let height = document.body.clientHeight;\r\n    \r\n    for (let i = 0; i < (width / scale); i++) {\r\n\r\n      canvas.add(new fabric.Line([ i * scale, 0, i * scale, height], { stroke: '616161', selectable: false }));\r\n      canvas.add(new fabric.Line([ 0, i * scale, width, i * scale], { stroke: '616161', selectable: false }));\r\n    }\r\n\r\n  }\r\n\r\n  function drawBackground(image){\r\n    let width = document.body.clientWidth;\r\n    let height = document.body.clientHeight;\r\n\r\n    if(image){\r\n      let left = (width / 2) - (image.width / 2);\r\n      let top = (height / 2) - (image.height / 2);\r\n      fabric.Image.fromURL(image.src, function(img) {\r\n        let oImg = img.set({ left: left, top: top, selectable: false}).scale(1);\r\n        canvas.setBackgroundImage(oImg);\r\n        canvas.renderAll();\r\n      });\r\n    }\r\n  }\r\n\r\n  function drawToken(tokenImage, x, y){\r\n    \r\n    fabric.Image.fromURL(tokenImage.src, function(img) {\r\n      let oImg = img.set({ left: x, top: y, });\r\n      canvas.add(oImg)\r\n    });\r\n\r\n  }\r\n\r\n  function changeMap(event){\r\n    let newMap = mapList[event.target.id[0]]\r\n    setCurrentMap(newMap);\r\n    drawBackground(newMap)\r\n  }\r\n  \r\n  function uploadBackground(event){\r\n\r\n    const imageFiles = event.target.files;\r\n    const filesLength = imageFiles.length; \r\n    for(let i = 0; i < filesLength; i++) {\r\n        let reader = new FileReader();\r\n        let file = imageFiles[i];\r\n\r\n        reader.onloadend = () => {\r\n          \r\n          let base_image = new Image();\r\n          base_image.src = reader.result;\r\n\r\n          if(!currentMap){\r\n\r\n            setCurrentMap(base_image);\r\n            base_image.onload = function() {\r\n                drawBackground(base_image);\r\n              };\r\n          }\r\n          setMapList(mapList => [...mapList, base_image]);\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  function uploadToken(event){\r\n\r\n    const imageFiles = event.target.files;\r\n    const filesLength = imageFiles.length; \r\n\r\n    for(let i = 0; i < filesLength; i++) {\r\n        let reader = new FileReader();\r\n        let file = imageFiles[i];\r\n\r\n        reader.onloadend = () => {\r\n          \r\n          let base_image = new Image();\r\n          base_image.src = reader.result;          \r\n          setTokenList(mapList => [...mapList, base_image]);\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  function drop(event){\r\n    event.preventDefault();\r\n    const data = event.dataTransfer.getData('transfer');\r\n\r\n    let tokenImage = new Image();\r\n    tokenImage.src = data;\r\n\r\n    let x = event.clientX;\r\n    let y = event.clientY;\r\n    let tokenInfo = {\r\n      src: tokenImage,\r\n      x: x,\r\n      y: y,\r\n    }\r\n\r\n    setCurrentTokens(currentTokens => [...currentTokens, tokenInfo]);\r\n    drawToken(tokenImage, x, y);\r\n  }\r\n\r\n  function allowDrop(event){\r\n      event.preventDefault();\r\n  }\r\n\r\n  {}\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <EditTray toggleTokens={toggleTokens} toggleMaps={toggleMaps} toggleOptions={toggleOptionTray} close={closeAll} />\r\n      {optionTray && <OptionTray scaleGrid={scaleGrid} />}\r\n      <TokenDrawer state={TokenDrawerState} getToken={uploadToken} tokens={tokenList} />\r\n      <MapDrawer state={MapDrawerState} getMap={uploadBackground} maps={mapList} changeMap={changeMap} />\r\n        { <Droppable drop={drop} allowDrop={allowDrop}>\r\n        <canvas id=\"c\" width={document.body.clientWidth} height={document.body.clientHeight} />\r\n        </Droppable> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}